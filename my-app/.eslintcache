[{"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/serviceWorker.js":"1","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/firebase/Config.js":"2","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/index.js":"3","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Landing/Landing.jsx":"4","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/App/App.jsx":"5","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Projects/Project.jsx":"6","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Projects/Projects.jsx":"7","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/Navbar.jsx":"8","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/CardBoard.jsx":"9","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SmallCard.jsx":"10","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/utils/itineraryBoardLib.js":"11","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/ItineraryBoard.jsx":"12","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/utils/lib.js":"13","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/BoardSelect.jsx":"14","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/CardSelect.jsx":"15","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/DaySelect.jsx":"16","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/InvitationButton.jsx":"17","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/ProjectTitle.jsx":"18","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/UserButton.jsx":"19","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/Popup.jsx":"20","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/FeatureBar.jsx":"21","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/SignIn.jsx":"22","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/JoinProject.jsx":"23","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/App/CheckUser.jsx":"24","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/Appointments.jsx":"25","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/TimeTable.jsx":"26","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/IsDraggingUser.jsx":"27","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Tags.jsx":"28","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/LargeCard.jsx":"29","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Remove.jsx":"30","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddTime.jsx":"31","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddLink.jsx":"32","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Description.jsx":"33","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddComment.jsx":"34","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Links.jsx":"35","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Link.jsx":"36","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Comments.jsx":"37","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/DaySelect.jsx":"38","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/ChangeMainTag.jsx":"39","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SelectCategory.jsx":"40","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/projectsSlice.js":"41","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/store.js":"42","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/CardTitle.jsx":"43","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/PendingDescription.jsx":"44","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/AddCard.jsx":"45","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/cardSlice.js":"46","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/SignUp.jsx":"47","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/PendingTitle.jsx":"48","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SavedDate.jsx":"49","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/dayplanSlice.js":"50","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/RedirectButton.jsx":"51","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Comment.jsx":"52","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/DataNumber.jsx":"53","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SavedTags.jsx":"54","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddTag.jsx":"55","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/userSlice.js":"56","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/itinerarySlice.js":"57","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/FloatMenu.jsx":"58","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/membersSlice.js":"59","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Projects/AddProject.jsx":"60","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/RemoveProject.jsx":"61","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/MobileMenu.jsx":"62","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/utils/customHooks.js":"63","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/PendingCardsFilter.jsx":"64","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/Schedule.jsx":"65","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/Sidebar.jsx":"66","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/FilteredCards.jsx":"67","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/AppointmentTime.jsx":"68"},{"size":4934,"mtime":1606275674064,"results":"69","hashOfConfig":"70"},{"size":20651,"mtime":1610384247214,"results":"71","hashOfConfig":"70"},{"size":405,"mtime":1609397357566,"results":"72","hashOfConfig":"70"},{"size":2536,"mtime":1610722799270,"results":"73","hashOfConfig":"70"},{"size":734,"mtime":1610203780505,"results":"74","hashOfConfig":"70"},{"size":3834,"mtime":1609680274204,"results":"75","hashOfConfig":"70"},{"size":2503,"mtime":1610901549718,"results":"76","hashOfConfig":"70"},{"size":2104,"mtime":1610722993793,"results":"77","hashOfConfig":"70"},{"size":2231,"mtime":1610647229437,"results":"78","hashOfConfig":"70"},{"size":1435,"mtime":1610384247211,"results":"79","hashOfConfig":"70"},{"size":2357,"mtime":1610965052881,"results":"80","hashOfConfig":"70"},{"size":7696,"mtime":1610647229444,"results":"81","hashOfConfig":"70"},{"size":6101,"mtime":1610939271329,"results":"82","hashOfConfig":"70"},{"size":779,"mtime":1609309311386,"results":"83","hashOfConfig":"70"},{"size":2499,"mtime":1610902594061,"results":"84","hashOfConfig":"70"},{"size":2454,"mtime":1610384247214,"results":"85","hashOfConfig":"70"},{"size":1544,"mtime":1609729615397,"results":"86","hashOfConfig":"70"},{"size":1570,"mtime":1609582176657,"results":"87","hashOfConfig":"70"},{"size":1425,"mtime":1609738178933,"results":"88","hashOfConfig":"70"},{"size":2265,"mtime":1609651815312,"results":"89","hashOfConfig":"70"},{"size":1374,"mtime":1610647229452,"results":"90","hashOfConfig":"70"},{"size":1639,"mtime":1609292042780,"results":"91","hashOfConfig":"70"},{"size":2487,"mtime":1609680943826,"results":"92","hashOfConfig":"70"},{"size":940,"mtime":1609399782055,"results":"93","hashOfConfig":"70"},{"size":5674,"mtime":1610951503955,"results":"94","hashOfConfig":"70"},{"size":4133,"mtime":1610692074240,"results":"95","hashOfConfig":"70"},{"size":557,"mtime":1610647229443,"results":"96","hashOfConfig":"70"},{"size":1947,"mtime":1610647229451,"results":"97","hashOfConfig":"70"},{"size":5295,"mtime":1610900202892,"results":"98","hashOfConfig":"70"},{"size":1476,"mtime":1610643068082,"results":"99","hashOfConfig":"70"},{"size":2069,"mtime":1610939000338,"results":"100","hashOfConfig":"70"},{"size":1301,"mtime":1610904664577,"results":"101","hashOfConfig":"70"},{"size":2633,"mtime":1609396067047,"results":"102","hashOfConfig":"70"},{"size":1219,"mtime":1609395769728,"results":"103","hashOfConfig":"70"},{"size":1016,"mtime":1609396182721,"results":"104","hashOfConfig":"70"},{"size":2884,"mtime":1610903219835,"results":"105","hashOfConfig":"70"},{"size":1640,"mtime":1610899542732,"results":"106","hashOfConfig":"70"},{"size":1091,"mtime":1610384247212,"results":"107","hashOfConfig":"70"},{"size":1495,"mtime":1610632878255,"results":"108","hashOfConfig":"70"},{"size":832,"mtime":1610902928194,"results":"109","hashOfConfig":"70"},{"size":324,"mtime":1609589812745,"results":"110","hashOfConfig":"70"},{"size":575,"mtime":1609231022727,"results":"111","hashOfConfig":"70"},{"size":861,"mtime":1609582845550,"results":"112","hashOfConfig":"70"},{"size":1222,"mtime":1610647229439,"results":"113","hashOfConfig":"70"},{"size":1808,"mtime":1610647229437,"results":"114","hashOfConfig":"70"},{"size":3248,"mtime":1610384247215,"results":"115","hashOfConfig":"70"},{"size":1898,"mtime":1609291944612,"results":"116","hashOfConfig":"70"},{"size":1185,"mtime":1610647229440,"results":"117","hashOfConfig":"70"},{"size":358,"mtime":1609567727040,"results":"118","hashOfConfig":"70"},{"size":3578,"mtime":1609227127652,"results":"119","hashOfConfig":"70"},{"size":727,"mtime":1610205892777,"results":"120","hashOfConfig":"70"},{"size":2558,"mtime":1610903215150,"results":"121","hashOfConfig":"70"},{"size":837,"mtime":1609566443272,"results":"122","hashOfConfig":"70"},{"size":975,"mtime":1610647229441,"results":"123","hashOfConfig":"70"},{"size":3341,"mtime":1610938674392,"results":"124","hashOfConfig":"70"},{"size":2204,"mtime":1609227183768,"results":"125","hashOfConfig":"70"},{"size":536,"mtime":1609232884652,"results":"126","hashOfConfig":"70"},{"size":979,"mtime":1610900202892,"results":"127","hashOfConfig":"70"},{"size":1844,"mtime":1609227195037,"results":"128","hashOfConfig":"70"},{"size":2112,"mtime":1609680921021,"results":"129","hashOfConfig":"70"},{"size":1877,"mtime":1609681032619,"results":"130","hashOfConfig":"70"},{"size":2580,"mtime":1609737577376,"results":"131","hashOfConfig":"70"},{"size":903,"mtime":1610939404464,"results":"132","hashOfConfig":"70"},{"size":2920,"mtime":1610266070275,"results":"133","hashOfConfig":"70"},{"size":4053,"mtime":1610264288745,"results":"134","hashOfConfig":"70"},{"size":4493,"mtime":1610951513196,"results":"135","hashOfConfig":"70"},{"size":624,"mtime":1610384247211,"results":"136","hashOfConfig":"70"},{"size":660,"mtime":1610952112794,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"19e0as4",{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"144"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"147"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"147"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"140"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/serviceWorker.js",[],["296","297"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/firebase/Config.js",["298","299","300","301"],"import firebase from \"firebase/app\"\nimport \"firebase/analytics\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAxbnsUNTG2SYqUsC2QqIbBo1OLuKXeZ-g\",\n  authDomain: \"pplanner-bfb1a.firebaseapp.com\",\n  databaseURL: \"https://pplanner-bfb1a.firebaseio.com\",\n  projectId: \"pplanner-bfb1a\",\n  storageBucket: \"pplanner-bfb1a.appspot.com\",\n  messagingSenderId: \"501383303118\",\n  appId: \"1:501383303118:web:a6c81e2be82826845e659f\",\n  measurementId: \"G-FETYRNE2VX\",\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\n//abbreviation\nvar db = firebase.firestore()\nvar au = firebase.auth()\nexport const toDate = firebase.firestore.Timestamp.toDate\n\n////////////////////////////////////\n//          user-related          //\n////////////////////////////////////\n\nexport const checkUserStatus = (handleUser, handleNoUser) => {\n  au.onAuthStateChanged(function (user) {\n    if (user) {\n      // User is signed in.\n      handleUser(user)\n    } else {\n      // No user is signed in.\n      handleNoUser()\n    }\n  })\n}\n\nexport const signUp_Native = (input, handleSuccess) => {\n  au.createUserWithEmailAndPassword(input.email, input.password)\n    .then((result) => {\n      let user = result.user\n      let docRef = db.collection(\"users\").doc(user.uid)\n\n      let update = {\n        name: input.name,\n        email: user.email,\n        picture: user.photoURL,\n      }\n      docRef.set(update).catch(function (error) {\n        console.error(\"Error adding document: \", error)\n      })\n    })\n    .then((res) => {\n      handleSuccess()\n    })\n    .catch((error) => {\n      var errorCode = error.code\n      var errorMessage = error.message\n      alert(errorMessage)\n      // ..\n    })\n}\n\nexport const signIn_Native = (input, handleSuccess) => {\n  return au\n    .signInWithEmailAndPassword(input.email, input.password)\n    .then((user) => {\n      // Signed in\n      // ...\n      handleSuccess()\n    })\n    .catch((error) => {\n      var errorCode = error.code\n      var errorMessage = error.message\n      alert(errorMessage)\n    })\n}\n\nexport const signOut = (redirect) => {\n  return au\n    .signOut()\n    .then(function () {\n      // Sign-out successful.\n      redirect()\n    })\n    .catch(function (error) {\n      // An error happened.\n    })\n}\n\nexport const updateProjectInUser_Fs = (userId, type, projectId) => {\n  const docRef = db.collection(\"users\").doc(userId)\n  const change = {}\n\n  if (type === \"add\") {\n    change.projects = firebase.firestore.FieldValue.arrayUnion(projectId)\n  }\n  if (type === \"remove\") {\n    change.projects = firebase.firestore.FieldValue.arrayRemove(projectId)\n  }\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\n//////listening to cloud data///////\nexport const listenToUser = (userId, updateState) => {\n  let unsubscribe = db\n    .collection(\"users\")\n    .doc(userId)\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      let data = snapshot.data()\n      data.id = snapshot.id\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n      // console.log(source, snapshot, data)\n      updateState(data)\n    })\n  return unsubscribe\n}\n\nexport const listenToMembers = (\n  projectId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"users\")\n    .where(\"projects\", \"array-contains\", projectId)\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      // console.log(source, snapshot, docChange)\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          //add id to data\n          data.id = id\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        // console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToProjects = (\n  userId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"projects\")\n    .where(\"members\", \"array-contains\", userId)\n    .orderBy(\"created_time\", \"desc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.created_time = data.created_time.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        // console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToProjects2 = (userId, handleUpdate) => {\n  return db\n    .collection(\"projects\")\n    .where(\"members\", \"array-contains\", userId)\n    .orderBy(\"created_time\", \"desc\")\n    .onSnapshot((snapshot) => {\n      const docChange = snapshot.docChanges()\n\n      if (docChange.length > 0) {\n        const temp = []\n        snapshot.forEach((doc) => {\n          const id = doc.id\n          const data = doc.data()\n          data.id = id\n          data.created_time = data.created_time.toDate().toString()\n          temp.push(data)\n        })\n        handleUpdate(temp)\n      }\n    })\n}\n\nexport const listenToDayplans = (\n  itineraryId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"dayplans\")\n    .where(\"itinerary_id\", \"==\", itineraryId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.date = data.date.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        // console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToCard = (\n  projectId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"projects\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          // console.log(source, type, id, data)\n          //add id to data\n          data.id = id\n\n          if (data.start_time) {\n            //conver time object to string\n            data.start_time = data.start_time.toDate().toString()\n            data.end_time = data.end_time.toDate().toString()\n          }\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        // console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToCard2 = (projectId, handleUpdate) => {\n  return db\n    .collection(\"projects\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      if (docChange.length > 0) {\n        const temp = []\n        snapshot.docChanges().forEach(function (change) {\n          const data = change.doc.data()\n          data.id = change.doc.id\n          data.type = change.type\n          if (data.start_time) {\n            data.start_time = data.start_time.toDate().toString()\n            data.end_time = data.end_time.toDate().toString()\n          }\n          temp.push(data)\n        })\n        handleUpdate(temp)\n      }\n    })\n}\n\nexport const ListenToCardsRelatedData = (\n  field,\n  cardId,\n  // handleAdd,\n  // handleModify,\n  // handleRemove,\n  handleChange\n) => {\n  const unsubscribe = db\n    .collection(field)\n    .where(\"card_id\", \"==\", cardId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      const docChange = snapshot.docChanges()\n      const source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      if (docChange.length > 0) {\n        docChange.forEach(function (change) {\n          const data = change.doc.data()\n          data.id = change.doc.id\n          data.date = data.date.toDate().toString()\n\n          // if (change.type === \"added\") {\n          //   handleAdd(data, source)\n          // }\n          // if (change.type === \"modified\") {\n          //   handleModify(data, source)\n          // }\n          // if (change.type === \"removed\") {\n          //   handleRemove(data, source)\n          // }\n\n          handleChange(change.type, data, source)\n        })\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToComments = (\n  cardId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"comments\")\n    .where(\"card_id\", \"==\", cardId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n          // console.log(source, type, id, data)\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.date = data.date.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        // console.log(\"data has been saved to cloud database\")\n        // console.log(\"comments\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToLinks = (\n  cardId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"links\")\n    .where(\"card_id\", \"==\", cardId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n          // console.log(source, type, id, data)\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.date = data.date.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        // console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\n//////update cloud data//////\n\n//basic function\nexport const update = (collection, doc, fileds) => {\n  let docRef = db.collection(collection).doc(doc)\n\n  return docRef\n    .update(fileds)\n    .then(function () {\n      console.log(\"Document successfully updated!\")\n    })\n    .then(docRef.update({ onChange: \"\" }))\n    .catch(function (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error)\n    })\n}\n\n//update project title in nav bar\n\nexport const addProject_Fs = (input) => {\n  let docRef = db.collection(\"projects\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateProject_Fs = (projectId, change) => {\n  let docRef = db.collection(\"projects\").doc(projectId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const updateProjectMember_Fs = (projectId, type, targetUserId) => {\n  let docRef = db.collection(\"projects\").doc(projectId)\n  let change\n\n  if (type === \"add\") {\n    change = {\n      members: firebase.firestore.FieldValue.arrayUnion(targetUserId),\n    }\n  }\n  if (type === \"remove\") {\n    change = {\n      members: firebase.firestore.FieldValue.arrayRemove(targetUserId),\n    }\n  }\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const removeProject_Fs = (projectId) => {\n  let docRef = db.collection(\"projects\").doc(projectId)\n\n  return docRef.delete().catch(function (error) {\n    console.error(\"Error deleting document: \", error)\n  })\n}\n\n//////cards related//////\nexport const AddCard_Fs = (projectId, input) => {\n  let docRef = db.collection(\"projects\").doc(projectId).collection(\"cards\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateCard_Fs = (projectId, cardId, change) => {\n  // expected format:\n  // let change = {\n  //   title: input,\n  // }\n\n  let docRef = db\n    .collection(\"projects\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .doc(cardId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const removeCard_Fs = (projectId, cardId) => {\n  let docRef = db\n    .collection(\"projects\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .doc(cardId)\n\n  return docRef.delete().catch(function (error) {\n    console.error(\"Error deleting document: \", error)\n  })\n}\n\nexport const getCommentsNumber_Fs = (cardId) => {\n  return db\n    .collection(\"comments\")\n    .where(\"card_id\", \"==\", cardId)\n    .get()\n    .then(function (querySnapshot) {\n      let temp = []\n      querySnapshot.forEach(function (doc) {\n        temp.push(doc.data())\n      })\n      return temp.length\n    })\n\n    .catch(function (error) {\n      console.log(\"Error getting documents: \", error)\n    })\n}\n\nexport const addComment_Fs = (input) => {\n  // expected format:\n  // let input = {\n  // card_id: cardId,\n  // sender_id: userId,\n  // content: pending,\n  // date: date object,\n  // }\n\n  let docRef = db.collection(\"comments\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateComment_Fs = (commentId, change) => {\n  // expected format:\n  // let change = {\n  //   content: input,\n  // }\n\n  let docRef = db.collection(\"comments\").doc(commentId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const removeComment_Fs = (commentId) => {\n  let docRef = db.collection(\"comments\").doc(commentId)\n\n  return docRef.delete().catch(function (error) {\n    console.error(\"Error deleting document: \", error)\n  })\n}\n\nexport const getLinksNumber_Fs = (cardId) => {\n  return db\n    .collection(\"links\")\n    .where(\"card_id\", \"==\", cardId)\n    .get()\n    .then(function (querySnapshot) {\n      let temp = []\n      querySnapshot.forEach(function (doc) {\n        temp.push(doc.data())\n      })\n      return temp.length\n    })\n\n    .catch(function (error) {\n      console.log(\"Error getting documents: \", error)\n    })\n}\n\nexport const addLink_Fs = (input) => {\n  // expected format:\n  // let input = {\n  // card_id: cardId,\n  // url: url,\n  // title: string,\n  // date: date object,\n  // }\n\n  let docRef = db.collection(\"links\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateLink_Fs = (linkId, change) => {\n  // expected format:\n  // let change = {\n  //   title: input,\n  // }\n\n  let docRef = db.collection(\"links\").doc(linkId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const removeLink_Fs = (linkId) => {\n  let docRef = db.collection(\"links\").doc(linkId)\n\n  return docRef.delete().catch(function (error) {\n    console.error(\"Error deleting document: \", error)\n  })\n}\n\n//get info once\n\nexport const getProject_Fs = (projectId) => {\n  let docRef = db.collection(\"projects\").doc(projectId)\n\n  return docRef\n    .get()\n    .then(function (doc) {\n      return doc.data()\n    })\n    .catch(function (error) {\n      console.log(\"Error getting document:\", error)\n    })\n}\n\nexport const addDayplan_Fs = (input) => {\n  let docRef = db.collection(\"dayplans\")\n\n  return docRef\n    .add(input)\n    .then(function (newDayplan) {\n      newDayplan.update({\n        id: newDayplan.id,\n      })\n    })\n    .catch(function (error) {\n      console.error(\"Error adding document: \", error)\n    })\n}\n\nexport function getFsData_Itinerary(project_id, field, operators, value) {\n  return db\n    .collection(\"projects\")\n    .doc(project_id)\n    .collection(\"itineraries\")\n    .orderBy(\"created_time\", \"desc\") //get the latest version of itineray\n    .limit(1)\n    .get()\n    .then(function (querySnapshot) {\n      let temp\n      querySnapshot.forEach(function (doc) {\n        temp = doc.data()\n      })\n      return temp\n    })\n    .then((res) => {\n      //conver time object to string\n      res.created_time = res.created_time.toDate().toString()\n      return res\n    })\n    .catch(function (error) {\n      console.log(\"Error getting documents: \", error)\n    })\n}\n\n//not sure what to do\n\nexport const listenToData = (callback) => {\n  db.collection(\"test\")\n    .doc(\"2eddU3pn48Llu7Ji60Nz\")\n    .onSnapshot(function (doc) {\n      var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\"\n      let data = doc.data()\n      callback(data)\n    })\n}\n\nexport const updateCards = (projectId, cardId, changes) => {\n  let docRef = db\n    .collection(\"project\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .doc(cardId)\n\n  return (\n    docRef\n      .update(changes)\n      .then(function () {\n        console.log(\"Document successfully updated!\")\n      })\n      // .then(docRef.update({ onChange: \"\" }))\n      .catch(function (error) {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error)\n      })\n  )\n}\n\nexport const updateSchedule = (dayplanId, changes) => {\n  let docRef = db.collection(\"dayplans\").doc(dayplanId)\n\n  return (\n    docRef\n      .update({ schedule: changes })\n      .then(function () {\n        console.log(\"Document successfully updated!\")\n      })\n      // .then(docRef.update({ onChange: \"\" }))\n      .catch(function (error) {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error)\n      })\n  )\n}\n",["302","303"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/index.js",[],["304","305"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Landing/Landing.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/App/App.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Projects/Project.jsx",["306","307","308","309","310","311","312","313","314"],"import React, { useEffect, useState, useRef } from \"react\"\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n  useParams,\n  useHistory,\n} from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport Navbar from \"../Navbar/Navbar\"\nimport ItineraryBoard from \"../ItineraryBoard/ItineraryBoard\"\nimport CardBoard from \"../CardBoard/CardBoard\"\n\nimport {\n  listenToCard,\n  listenToCard2,\n  listenToMembers,\n} from \"../../firebase/Config\"\n\nimport {\n  addCard,\n  modifyCard,\n  removeCard,\n  modifyCardWithCheck,\n  clearCardsState,\n  initCards,\n} from \"../../redux/slices/cardSlice\"\n\nimport {\n  addMember,\n  modifyMember,\n  removeMember,\n  clearMembersState,\n} from \"../../redux/slices/membersSlice\"\n\nconst Project = () => {\n  // console.log(\"rerender Project component\")\n\n  const [access, setAccess] = useState(false)\n\n  let { projectId } = useParams()\n  let match = useRouteMatch()\n  const user = useSelector((state) => state.user)\n  let itineraryId = useSelector((state) => state.itinerary.id)\n  const cards = useSelector((state) => state.cards)\n  const dispatch = useDispatch()\n\n  const handleAddCard = (res, source) => {\n    dispatch(addCard(res))\n  }\n\n  const handleModifyCard = (res, source) => {\n    dispatch(modifyCard(res))\n  }\n\n  const checkModifyCard = (res) => {\n    dispatch(modifyCardWithCheck(res))\n  }\n\n  const handleRemoveCard = (res, source) => {\n    dispatch(removeCard(res))\n  }\n\n  const handleAddMember = (res, source) => {\n    let input = {\n      id: res.id,\n      name: res.name,\n      picture: res.picture,\n    }\n    dispatch(addMember(input))\n  }\n\n  const handleModifyMember = (res, source) => {\n    let input = {\n      id: res.id,\n      name: res.name,\n      picture: res.picture,\n    }\n    dispatch(modifyMember(input))\n  }\n\n  const handleRemoveMember = (res, source) => {\n    let input = {\n      id: res.id,\n      name: res.name,\n      picture: res.picture,\n    }\n    dispatch(removeMember(input))\n  }\n\n  const isInit = useRef(true)\n  const handleUpdateCard = (res) => {\n    if (isInit.current) {\n      dispatch(initCards(res))\n      isInit.current = false\n    } else {\n      res.forEach((card) => {\n        if (card.type === \"added\") {\n          delete card.type\n          dispatch(addCard(card))\n        }\n        if (card.type === \"modified\") {\n          delete card.type\n          dispatch(modifyCardWithCheck(card))\n        }\n        if (card.type === \"removed\") {\n          delete card.type\n          dispatch(removeCard(card))\n        }\n      })\n    }\n  }\n\n  //init and listen to changes\n  useEffect(() => {\n    // const unsubscribeToCard =\n    //   access &&\n    //   listenToCard(projectId, handleAddCard, checkModifyCard, handleRemoveCard)\n\n    const unsubscribeToCard =\n      access && listenToCard2(projectId, handleUpdateCard)\n\n    const unsubscribeToMembers =\n      access &&\n      listenToMembers(\n        projectId,\n        handleAddMember,\n        handleModifyMember,\n        handleRemoveMember\n      )\n\n    return () => {\n      if (access) {\n        unsubscribeToCard()\n        unsubscribeToMembers()\n\n        //reset cards and memebers' state\n        dispatch(clearCardsState())\n        dispatch(clearMembersState())\n      }\n    }\n  }, [access])\n\n  //check if user is in the project or not\n  const history = useHistory()\n\n  useEffect(() => {\n    if (user.id && user.projects.includes(projectId)) {\n      setAccess(true)\n    }\n\n    if (user.id && !user.projects.includes(projectId)) {\n      alert(\"您沒有訪問這個旅行計劃的權限\")\n      history.replace(\"/projects\")\n    }\n  }, [user])\n\n  return (\n    <Switch>\n      <Route path={`${match.path}/itineraries`}>\n        <Navbar />\n        <ItineraryBoard />\n      </Route>\n      <Route path={`${match.path}/cards`}>\n        <Navbar />\n        <CardBoard />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Project\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Projects/Projects.jsx",["315"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/Navbar.jsx",["316"],"import React, { useState, useEffect } from \"react\"\nimport { Link, useLocation, Route, Switch, useParams } from \"react-router-dom\"\nimport styles from \"./Navbar.module.scss\"\nimport ProjectTitle from \"./ProjectTitle\"\nimport FeatureBar from \"./FeatureBar\"\nimport InvitationButton from \"./InvitationButton\"\nimport UserButton from \"./UserButton\"\nimport Popup from \"../Popup/Popup\"\nimport MobileMenu from \"./MobileMenu\"\nimport { useSelector } from \"react-redux\"\n\nconst Navbar = () => {\n  const location = useLocation()\n  const [isShowing, setShowing] = useState(false)\n  const checkShouldShowPopup = () => {\n    const shouldShowPopup = location.state?.showPopup\n    shouldShowPopup && setShowing(shouldShowPopup)\n  }\n\n  useEffect(checkShouldShowPopup, [location])\n  const [showMobileMenu, setShowMobileMenu] = useState(false)\n  const isSignIn = useSelector((state) => state.user.id)\n\n  return (\n    <div className={styles.navbar}>\n      <Switch>\n        <Route path={`/projects/:projectId/:boardType`}>\n          <Link to=\"/projects\" className={styles.projects}>\n            <div className={styles.tooltip_text}>返回總覽</div>\n          </Link>\n          <div\n            className={styles.mobile_menu_icon}\n            onClick={() => {\n              setShowMobileMenu(true)\n            }}\n          ></div>\n          <ProjectTitle />\n          <FeatureBar />\n          <InvitationButton isShowing={isShowing} setShowing={setShowing} />\n          <MobileMenu\n            isShowing={showMobileMenu}\n            setShowing={setShowMobileMenu}\n          />\n          <div className={styles.space_board}></div>\n          <UserButton isShowing={isShowing} setShowing={setShowing} />\n        </Route>\n\n        <Route path=\"/\">\n          <Link\n            to={isSignIn ? \"/projects\" : \"/\"}\n            className={styles.logo}\n          ></Link>\n          <div className={styles.space}></div>\n          <UserButton isShowing={isShowing} setShowing={setShowing} />\n        </Route>\n      </Switch>\n\n      {isShowing && <Popup isShowing={isShowing} setShowing={setShowing} />}\n    </div>\n  )\n}\n\nexport default Navbar\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/CardBoard.jsx",["317","318"],"import React, { memo, useState, useRef, useEffect } from \"react\"\nimport { useParams, Route, Switch } from \"react-router-dom\"\nimport styles from \"./CardBoard.module.scss\"\nimport { AddCard_Fs } from \"../../firebase/Config\"\nimport { useWindowSize, useKeyDown } from \"../../utils/customHooks\"\nimport FilteredCards from \"./FilteredCards\"\nimport AddCard from \"./AddCard\"\nimport LargeCard from \"../LargeCard/LargeCard\"\n\nconst CardBoard = () => {\n  const { projectId } = useParams()\n\n  //////add new card//////\n  const emptyCard = {\n    title: \"\",\n    description: \"\",\n    category: \"default\",\n    tags: [],\n    status: 0,\n    isDragging: false,\n  }\n\n  const [addCard, toggleAddCard] = useState(false)\n  const [pendingInfo, setPendingInfo] = useState(emptyCard)\n\n  const handleAddCard = (e) => {\n    const shouldAddCard = pendingInfo.title || pendingInfo.description\n    if (shouldAddCard) {\n      if (e.target?.id === \"cardBoardContainer\") {\n        AddCard_Fs(projectId, pendingInfo)\n        toggleAddCard(!addCard)\n        setPendingInfo(emptyCard)\n      }\n    } else {\n      if (e.target?.id === \"cardBoardContainer\") {\n        toggleAddCard(!addCard)\n      }\n    }\n  }\n\n  const windowSize = useWindowSize()\n  const padding = (windowSize?.width % 240) / 2\n  const addCardRef = useRef(null)\n\n  const handleClickAddCard = () => {\n    toggleAddCard(true)\n\n    addCardRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    setTimeout(() => {\n      addCardRef.current?.focus()\n    }, 500)\n  }\n\n  return (\n    <div\n      id=\"cardBoardContainer\"\n      className={styles.container}\n      style={{ padding: `20px ${padding}px` }}\n      onClick={handleAddCard}\n    >\n      <FilteredCards />\n\n      {addCard && (\n        <AddCard\n          addCardRef={addCardRef}\n          pendingInfo={pendingInfo}\n          setPendingInfo={setPendingInfo}\n        />\n      )}\n\n      <Switch>\n        <Route path={`/projects/:projectId/:boardType/:cardId`}>\n          <LargeCard />\n        </Route>\n      </Switch>\n\n      <div className={styles.addCardButton} onClick={handleClickAddCard}>\n        <div className={styles.tooltip_text}>新增卡片</div>\n      </div>\n    </div>\n  )\n}\n\nconst MemorizeCardBoard = memo(CardBoard)\nexport default MemorizeCardBoard\n",["319","320"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SmallCard.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/utils/itineraryBoardLib.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/ItineraryBoard.jsx",["321","322"],"//tools\nimport React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Switch, Route, useParams } from \"react-router-dom\"\nimport { DragDropContext } from \"react-beautiful-dnd\"\n\n//components and scss\n\nimport Sidebar from \"./Sidebar\"\nimport Schedule from \"./Schedule\"\nimport styles from \"./ItineraryBoard.module.scss\"\n\n//functions\nimport { OnDragEnd } from \"../../utils/itineraryBoardLib\"\nimport { updateCard_Fs } from \"../../firebase/Config\"\nimport {\n  modifyCardProperties,\n  updateCardsOrder,\n} from \"../../redux/slices/cardSlice\"\nimport LargeCard from \"../LargeCard/LargeCard\"\n\nconst ItineraryBoard = () => {\n  const { projectId } = useParams()\n  const cards = useSelector((state) => state.cards)\n\n  const filterCards = (filterMethod) => {\n    switch (filterMethod) {\n      case \"noPlan\": {\n        return cards.filter((card) => card.status === 0)\n      }\n\n      case \"withPlan\": {\n        return cards.filter((card) => card.status === 1)\n      }\n\n      case \"noFilter\": {\n        return cards\n      }\n\n      default: {\n        return cards\n      }\n    }\n  }\n\n  // //register needed dispatch\n  const dispatch = useDispatch()\n\n  const handleOnDragEnd = (result) => {\n    const isValidDrop = result.destination\n\n    if (isValidDrop) {\n      //define type\n      let type\n      let sou = result.source.droppableId\n      let des = result.destination.droppableId\n\n      if (sou === \"cardsList\" && des === \"cardsList\") {\n        type = \"reorderCards\"\n      }\n      if (sou === \"cardsList\" && des !== \"cardsList\") {\n        type = \"addAppointment\"\n      }\n      if (sou === \"appointments\" && des !== \"cardsList\") {\n        type = \"rescheduleAppointment\"\n      }\n      if (sou === \"appointments\" && des === \"cardsList\") {\n        type = \"removeAppointment\"\n      }\n\n      switch (type) {\n        case \"reorderCards\": {\n          //check if change\n          if (result.source.index === result.destination.index) {\n            break\n          }\n\n          let destinationId = filterCards(\"noPlan\")[result.destination.index].id\n          let updateAction = updateCardsOrder({\n            type: \"cardsList\",\n            result: result,\n            destinationId: destinationId,\n          })\n          dispatch(updateAction)\n\n          let change = {\n            isDragging: false,\n          }\n          //update to cloud database\n          updateCard_Fs(projectId, result.draggableId, change)\n          break\n        }\n\n        case \"rescheduleAppointment\": {\n          //get target item\n          let targetCardId = result.draggableId\n          let target = cards.find((card) => card.id === targetCardId)\n\n          //get original data\n          let startTime = new Date(target.start_time)\n          let endTime = new Date(target.end_time)\n          let timeSpan = endTime.getTime() - startTime.getTime()\n\n          //get new data\n          let newStartTime = new Date()\n          newStartTime.setTime(result.destination.droppableId)\n          let newEndTime = new Date()\n          newEndTime.setTime(newStartTime.getTime() + timeSpan)\n\n          //check if change\n          if (\n            startTime.getTime() === newStartTime.getTime() &&\n            endTime.getTime() === newEndTime.getTime()\n          ) {\n            //prepare changes\n            let change = {\n              isDragging: false,\n            }\n\n            //update to cloud database to cancel isDragging\n            updateCard_Fs(projectId, targetCardId, change)\n            break\n          }\n\n          //prepare changes\n          let change = {\n            start_time: newStartTime,\n            end_time: newEndTime,\n            isDragging: false,\n          }\n          let convertedChange = {\n            start_time: newStartTime.toString(),\n            end_time: newEndTime.toString(),\n            isDragging: false,\n          }\n\n          //update locally first\n          dispatch(\n            modifyCardProperties({ change: convertedChange, id: targetCardId })\n          )\n          //update to cloud database\n          updateCard_Fs(projectId, targetCardId, change)\n          break\n        }\n\n        case \"addAppointment\": {\n          //get target item\n          let targetCardId = result.draggableId\n\n          //get new data\n          let newStartTime = new Date()\n          newStartTime.setTime(result.destination.droppableId)\n          let newEndTime = new Date()\n          newEndTime.setTime(newStartTime.getTime() + 60 * 60 * 1000)\n\n          //prepare changes\n          let change = {\n            status: 1,\n            start_time: newStartTime,\n            end_time: newEndTime,\n            isDragging: false,\n          }\n          let convertedChange = {\n            status: 1,\n            start_time: newStartTime.toString(),\n            end_time: newEndTime.toString(),\n            isDragging: false,\n          }\n\n          //update locally first\n          dispatch(\n            modifyCardProperties({ change: convertedChange, id: targetCardId })\n          )\n          //update to cloud database\n          updateCard_Fs(projectId, targetCardId, change)\n\n          break\n        }\n\n        case \"removeAppointment\": {\n          //get target item\n          let targetCardId = result.draggableId\n\n          //prepare changes\n          let change = {\n            status: 0,\n            start_time: null,\n            end_time: null,\n            isDragging: false,\n          }\n          let convertedChange = {\n            status: 0,\n            start_time: null,\n            end_time: null,\n            isDragging: false,\n          }\n\n          //update locally first\n          dispatch(\n            modifyCardProperties({ change: convertedChange, id: targetCardId })\n          )\n          //update to cloud database\n          updateCard_Fs(projectId, targetCardId, change)\n\n          break\n        }\n\n        default: {\n          console.log(\"invalid drag and drop\")\n\n          // still need to turn off notification\n          let targetCardId = result.draggableId\n          let change = {\n            isDragging: false,\n          }\n          let convertedChange = {\n            isDragging: false,\n          }\n\n          //update locally first\n          dispatch(\n            modifyCardProperties({ change: convertedChange, id: targetCardId })\n          )\n          //update to cloud database\n          updateCard_Fs(projectId, targetCardId, change)\n\n          break\n        }\n      }\n    } else {\n      // invalid drop\n      // still need to turn off notification\n      let targetCardId = result.draggableId\n      let change = {\n        isDragging: false,\n      }\n      let convertedChange = {\n        isDragging: false,\n      }\n\n      //update locally first\n      dispatch(\n        modifyCardProperties({ change: convertedChange, id: targetCardId })\n      )\n      //update to cloud database\n      updateCard_Fs(projectId, targetCardId, change)\n    }\n  }\n\n  const user = useSelector((state) => state.user)\n\n  const handleOnDragStart = (result) => {\n    //register dragger's info on cloud data to prevent re-writes\n    let targetCardId = result.draggableId\n    let userId = user.id\n\n    //prepare changes\n    let change = {\n      isDragging: userId,\n    }\n\n    //update to cloud database with blocking listening again\n    updateCard_Fs(projectId, targetCardId, change)\n  }\n\n  return (\n    <div className={styles.view}>\n      <DragDropContext\n        onDragStart={handleOnDragStart}\n        onDragEnd={handleOnDragEnd}\n      >\n        <Sidebar />\n        <Schedule />\n      </DragDropContext>\n\n      <Switch>\n        <Route path={`/projects/:projectId/:boardType/:cardId`}>\n          <LargeCard />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default ItineraryBoard\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/utils/lib.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/BoardSelect.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/CardSelect.jsx",["323","324","325"],"import React, { useState, useEffect, useRef } from \"react\"\nimport { createSelector } from \"@reduxjs/toolkit\"\nimport {\n  useRouteMatch,\n  useLocation,\n  useHistory,\n  useParams,\n} from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport Select from \"react-select\"\nimport makeAnimated from \"react-select/animated\"\n\nimport {\n  categories,\n  getCategoryTitle,\n  getTagTitle,\n  reactSelectsCustomStyles,\n} from \"../../utils/lib\"\n\nconst CardSelect = () => {\n  let history = useHistory()\n  let match = useRouteMatch()\n  const animatedComponents = makeAnimated()\n\n  const { projectId } = useParams()\n  const selectProjectTags = createSelector(\n    (state) => state.projects,\n    (projects) =>\n      projects.find((project) => project.id === projectId)?.tags ?? []\n  )\n  const projectTags = useSelector(selectProjectTags)\n\n  const selectCardsTags = createSelector(\n    (state) => state.cards,\n    (cards) => {\n      const tagList = cards.reduce(function (prev, curr) {\n        curr.tags.forEach((tag) => {\n          !prev.includes(tag) && prev.push(tag)\n        })\n        return prev\n      }, [])\n\n      return tagList\n    }\n  )\n  const cardsTags = useSelector(selectCardsTags)\n\n  const options = categories.map((category) => ({\n    value: category,\n    label: getCategoryTitle(category),\n  }))\n\n  if (cardsTags.length > 0 && projectTags.length > 0) {\n    cardsTags.forEach((tag) => {\n      const curr = projectTags.find((projectTag) => projectTag.id === tag)\n\n      options.push({\n        value: tag,\n        label: curr.name === \"\" ? getTagTitle(curr.color) : curr.name,\n      })\n    })\n  }\n\n  const location = useLocation()\n\n  const handleValue = () => {\n    return location.state?.tags\n      ? options.filter((option) => location.state.tags.includes(option.value))\n      : null\n  }\n\n  const handleChange = (e) => {\n    let params = []\n    let location\n    if (e?.length > 0) {\n      e.forEach((tag) => {\n        params.push(tag.value)\n      })\n      location = {\n        pathname: match.url,\n        state: { tags: params },\n      }\n    } else {\n      location = {\n        pathname: `${match.url}`,\n        state: { tags: null },\n      }\n    }\n    history.replace(location)\n  }\n\n  return (\n    <Select\n      isMulti\n      styles={reactSelectsCustomStyles}\n      options={options}\n      value={handleValue()}\n      onChange={handleChange}\n      closeMenuOnSelect={false}\n      components={animatedComponents}\n      placeholder=\"搜尋卡片標籤\"\n    />\n  )\n}\n\nexport default CardSelect\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/DaySelect.jsx",["326"],"import React, { useState, useEffect, useRef } from \"react\"\nimport { useLocation, useHistory } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport { createSelector } from \"@reduxjs/toolkit\"\n\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport \"./react-datepicker-customstyle.scss\"\nimport styles from \"./Navbar.module.scss\"\n\nimport { resetTime, hasPlan } from \"../../utils/lib\"\n\nconst DaySelect = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const selectPlannedCards = createSelector(\n    (state) => state.cards,\n    (cards) => cards.filter((card) => card.status === 1)\n  )\n  const plannedCards = useSelector(selectPlannedCards)\n  const [startDate, setStartDate] = useState(resetTime(new Date()))\n  const newStartDate = useRef(null)\n\n  const handleDateChange = (date) => {\n    const newLocation = {\n      pathname: location.pathname,\n      state: { startDate: date },\n    }\n    newStartDate.current = date\n    history.replace(newLocation)\n  }\n\n  useEffect(() => {\n    const findfirstDate = (cards) => {\n      const startTimes = cards.map((card) =>\n        new Date(card.start_time).getTime()\n      )\n      return resetTime(new Date(Math.min(...startTimes)))\n    }\n\n    if (newStartDate.current !== startDate) {\n      //firstly, display with choosen date\n      if (location.state?.startDate) {\n        newStartDate.current = location.state.startDate\n        setStartDate(location.state.startDate)\n      } else if (\n        //if not, display date with first planned card\n        plannedCards &&\n        newStartDate.current !== findfirstDate(plannedCards)\n      ) {\n        const firstDate = findfirstDate(plannedCards)\n        newStartDate.current = firstDate\n        handleDateChange(firstDate)\n      }\n      // otherwise, display with today by using default state\n    }\n  }, [location.state, plannedCards])\n\n  return (\n    <DatePicker\n      selected={startDate}\n      onChange={(date) => handleDateChange(date)}\n      className={styles.daySelect}\n      dateFormat=\"yyyy年MM月\"\n      popperModifiers={{\n        offset: {\n          enabled: true,\n          offset: \"10px, 5px\",\n        },\n        preventOverflow: {\n          enabled: true,\n          escapeWithReference: false,\n          boundariesElement: \"viewport\",\n        },\n      }}\n      dayClassName={(date) => hasPlan(plannedCards, date) && styles.hasPlan}\n    />\n  )\n}\n\nexport default DaySelect\n",["327","328"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/InvitationButton.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/ProjectTitle.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/UserButton.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/Popup.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/FeatureBar.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/SignIn.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/JoinProject.jsx",["329","330"],"import React, { useState, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\n\nimport styles from \"./Popup.module.scss\"\n\nimport { useParams, useLocation, useHistory } from \"react-router-dom\"\n\nimport {\n  getProject_Fs,\n  updateProjectMember_Fs,\n  updateProjectInUser_Fs,\n} from \"../../firebase/Config\"\n\nexport const JoinProject = () => {\n  const { projectId } = useParams()\n  const user = useSelector((state) => state.user)\n  const [popUp, setPopUp] = useState(false)\n  const [project, setProject] = useState({})\n  const history = useHistory()\n  const location = useLocation()\n\n  useEffect(() => {\n    //check if link is valid\n    getProject_Fs(projectId).then((res) => {\n      if (res) {\n        setProject(res)\n      } else {\n        alert(\"Oops! 這個旅行計劃不存在！\")\n        history.push(\"/\")\n        history.go(0)\n      }\n    })\n  }, [])\n\n  const handleAccept = () => {\n    const hasJoined = project.members.includes(user.id)\n\n    //accept logged in\n    if (user.id) {\n      if (hasJoined) {\n        alert(`您已加入過《${project.title}》`)\n        history.replace(`/projects/${projectId}/cards`)\n      } else {\n        updateProjectMember_Fs(projectId, \"add\", user.id).then((res) => {\n          updateProjectInUser_Fs(user.id, \"add\", projectId).then((res) => {\n            history.replace({ pathname: `/projects/${projectId}/cards` })\n          })\n        })\n      }\n    } else {\n      alert(\"請先登入會員帳號\")\n      //show login\n      history.push({\n        pathname: `${location.pathname}`,\n        state: { showPopup: \"signIn\" },\n      })\n    }\n  }\n\n  const handleCancel = () => {\n    //if logged-in, redirect to projects page\n    if (user.id) {\n      history.replace({ pathname: \"/projects\" })\n    } else {\n      //if not, redirect to home page\n      history.replace(\"/\")\n    }\n  }\n\n  return (\n    <div className={styles.join_background}>\n      {!popUp ? (\n        <div className={styles.popUp_container}>\n          <div className={styles.text}>\n            您受到邀請加入\n            <br />《{project.title}》\n            <br />\n            確定要加入嗎？\n          </div>\n\n          <div className={styles.tools}>\n            <div className={styles.cancel} onClick={handleCancel}>\n              拒絕\n            </div>\n            <div className={styles.join} onClick={handleAccept}>\n              加入\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default JoinProject\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/App/CheckUser.jsx",["331"],"import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useLocation, useHistory } from \"react-router-dom\"\nimport { checkUserStatus, listenToUser } from \"../../firebase/Config\"\nimport { initUser } from \"../../redux/slices/userSlice\"\n\nconst CheckUser = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const location = useLocation()\n  const user = useSelector((state) => state.user)\n\n  const handleUpdate = (res) => {\n    dispatch(initUser(res))\n  }\n\n  const handleUser = (currentUser) => {\n    if (user.id !== currentUser.uid) {\n      listenToUser(currentUser.uid, handleUpdate)\n    }\n  }\n\n  const handleNoUser = () => {\n    const shouldRedirect = location.pathname.slice(1, 12) !== \"joinProject\"\n    shouldRedirect && history.push(\"/\")\n  }\n\n  useEffect(() => {\n    checkUserStatus(handleUser, handleNoUser)\n  }, [])\n\n  return <div></div>\n}\n\nexport default CheckUser\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/Appointments.jsx",["332","333"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/TimeTable.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/IsDraggingUser.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Tags.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/LargeCard.jsx",["334"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Remove.jsx",["335"],"import React from \"react\"\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\"\nimport styles from \"./LargeCard.module.scss\"\nimport { removeCard_Fs } from \"../../firebase/Config\"\nimport { getFloatStyle } from \"../../utils/lib\"\nimport { useWindowSize } from \"../../utils/customHooks\"\n\nconst Remove = ({ isfloating, setFloat }) => {\n  const { projectId, cardId } = useParams()\n  const windowSize = useWindowSize()\n  const history = useHistory()\n  const match = useRouteMatch()\n\n  const handleRemove = () => {\n    removeCard_Fs(projectId, cardId)\n    setFloat(false)\n    // history.replace({ pathname: match.url.slice(0, -(cardId.length + 1)) })\n    history.goBack()\n  }\n\n  return (\n    <div\n      aria-label=\"remove\"\n      className={styles.remove_container}\n      style={getFloatStyle(isfloating, windowSize)}\n    >\n      <div aria-label=\"remove\" className={styles.remove_span}>\n        此動作將無法復原，確定要將這張卡片刪除嗎？\n      </div>\n      <div aria-label=\"remove\" className={styles.remove_buttons}>\n        <div\n          aria-label=\"remove\"\n          className={styles.remove_buttons__cancel}\n          onClick={() => {\n            setFloat(false)\n          }}\n        >\n          取消\n        </div>\n        <div\n          aria-label=\"remove\"\n          className={styles.remove_buttons__confirm}\n          onClick={handleRemove}\n        >\n          確定\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Remove\n",["336","337"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddTime.jsx",["338"],"import React, { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nimport styles from \"./LargeCard.module.scss\"\n\nimport { updateCard_Fs } from \"../../firebase/Config\"\n\nimport { getPureDate, getFloatStyle } from \"../../utils/lib\"\nimport DaySelect from \"./DaySelect\"\nimport { useWindowSize } from \"../../utils/customHooks\"\n\nconst AddTime = ({ card, isFloating, setFloat }) => {\n  const { projectId, cardId } = useParams()\n  const windowSize = useWindowSize()\n\n  //input time holder\n  const [startDate, setStartDate] = useState(getPureDate(new Date()))\n  const [endDate, setEndDate] = useState(getPureDate(new Date()))\n\n  useEffect(() => {\n    //update time to the latest value\n    try {\n      if (card.start_time && card.end_time) {\n        setStartDate(new Date(card.start_time))\n        setEndDate(new Date(card.end_time))\n      }\n    } catch {}\n  }, [])\n\n  const handleAddTime = () => {\n    if (\n      //check is input valid\n      endDate - startDate < 0 ||\n      endDate - startDate > 24 * 60 * 60 * 1000 ||\n      endDate.getDate() !== startDate.getDate()\n    ) {\n      alert(\"日期格式有誤，目前僅接受在同一天開始與結束的時間\")\n    } else {\n      //update to cloud database\n      let change = {\n        status: 1,\n        start_time: startDate,\n        end_time: endDate,\n      }\n      updateCard_Fs(projectId, cardId, change)\n      setFloat(false)\n    }\n  }\n\n  return (\n    <div\n      aria-label=\"addTime\"\n      className={styles.addTime_container}\n      style={getFloatStyle(isFloating, windowSize)}\n    >\n      <div aria-label=\"addTime\" className={styles.addLink_span}>\n        開始時間\n      </div>\n      <DaySelect date={startDate} setDate={setStartDate} />\n      <div aria-label=\"addTime\" className={styles.addLink_span}>\n        結束時間\n      </div>\n      <DaySelect date={endDate} setDate={setEndDate} />\n      <div\n        aria-label=\"addTime\"\n        className={styles.addLink_button}\n        onClick={handleAddTime}\n      >\n        儲存\n      </div>\n    </div>\n  )\n}\n\nexport default AddTime\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddLink.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Description.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddComment.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Links.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Link.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Comments.jsx",["339","340"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/DaySelect.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/ChangeMainTag.jsx",["341"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SelectCategory.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/projectsSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/store.js",[],["342","343"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/CardTitle.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/PendingDescription.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/AddCard.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/cardSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/SignUp.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/PendingTitle.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SavedDate.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/dayplanSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/RedirectButton.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/Comment.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/DataNumber.jsx",[],["344","345"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/SavedTags.jsx",["346"],"import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { nanoid, createSelector } from \"@reduxjs/toolkit\"\nimport { useParams } from \"react-router-dom\"\nimport styles from \"./CardBoard.module.scss\"\nimport { colorCode } from \"../../utils/lib\"\n\nconst SavedTags = ({ tags }) => {\n  const { projectId } = useParams()\n  const selectProjectTags = createSelector(\n    (state) => state.projects,\n    (projects) =>\n      projects.find((project) => project.id === projectId)?.tags ?? []\n  )\n  const projectTags = useSelector(selectProjectTags)\n\n  return tags.length > 0\n    ? tags.map((tag) => {\n        const target = projectTags.find((item) => item.id === tag)\n        return (\n          <div\n            key={tag}\n            style={{ backgroundColor: colorCode[target?.color] }}\n            className={styles.small_card_icon__tag}\n          ></div>\n        )\n      })\n    : null\n}\n\nconst MemorizeSavedTags = React.memo(SavedTags)\nexport default MemorizeSavedTags\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/AddTag.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/userSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/itinerarySlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/LargeCard/FloatMenu.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/redux/slices/membersSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Projects/AddProject.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Popup/RemoveProject.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/Navbar/MobileMenu.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/utils/customHooks.js",["347"],"import { useState, useEffect } from \"react\"\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  })\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n\n    window.addEventListener(\"resize\", handleResize)\n\n    //initial window size\n    handleResize()\n\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, [])\n\n  return windowSize\n}\n\nexport const useKeyDown = (callback) => {\n  const [keyDown, setKeyDown] = useState(null)\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      callback(e.keyCode)\n      setKeyDown(e.keyCode)\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [])\n\n  return keyDown\n}\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/PendingCardsFilter.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/Schedule.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/Sidebar.jsx",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/CardBoard/FilteredCards.jsx",["348"],"import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useLocation } from \"react-router-dom\"\nimport SmallCard from \"./SmallCard\"\n\nconst FilteredCards = () => {\n  const cards = useSelector((state) => state.cards)\n  const location = useLocation()\n  const filters = location.state?.tags\n  const passFilter = (tag) => (filters ? filters.includes(tag) : true)\n  const cardTags = (card) => {\n    return [card.category, ...card.tags]\n  }\n\n  return cards.map((card) => {\n    if (cardTags(card).some(passFilter)) {\n      return <SmallCard key={card.id} card={card} />\n    }\n  })\n}\n\nexport default FilteredCards\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/components/ItineraryBoard/AppointmentTime.jsx",[],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":60,"column":11,"nodeType":"355","messageId":"356","endLine":60,"endColumn":20},{"ruleId":"353","severity":1,"message":"354","line":76,"column":11,"nodeType":"355","messageId":"356","endLine":76,"endColumn":20},{"ruleId":"353","severity":1,"message":"357","line":118,"column":11,"nodeType":"355","messageId":"356","endLine":118,"endColumn":17},{"ruleId":"353","severity":1,"message":"357","line":754,"column":11,"nodeType":"355","messageId":"356","endLine":754,"endColumn":17},{"ruleId":"349","replacedBy":"358"},{"ruleId":"351","replacedBy":"359"},{"ruleId":"349","replacedBy":"360"},{"ruleId":"351","replacedBy":"361"},{"ruleId":"353","severity":1,"message":"362","line":16,"column":3,"nodeType":"355","messageId":"356","endLine":16,"endColumn":15},{"ruleId":"353","severity":1,"message":"363","line":45,"column":7,"nodeType":"355","messageId":"356","endLine":45,"endColumn":18},{"ruleId":"353","severity":1,"message":"364","line":46,"column":9,"nodeType":"355","messageId":"356","endLine":46,"endColumn":14},{"ruleId":"353","severity":1,"message":"365","line":49,"column":9,"nodeType":"355","messageId":"356","endLine":49,"endColumn":22},{"ruleId":"353","severity":1,"message":"366","line":53,"column":9,"nodeType":"355","messageId":"356","endLine":53,"endColumn":25},{"ruleId":"353","severity":1,"message":"367","line":57,"column":9,"nodeType":"355","messageId":"356","endLine":57,"endColumn":24},{"ruleId":"353","severity":1,"message":"368","line":61,"column":9,"nodeType":"355","messageId":"356","endLine":61,"endColumn":25},{"ruleId":"369","severity":1,"message":"370","line":143,"column":6,"nodeType":"371","endLine":143,"endColumn":14,"suggestions":"372"},{"ruleId":"369","severity":1,"message":"373","line":157,"column":6,"nodeType":"371","endLine":157,"endColumn":12,"suggestions":"374"},{"ruleId":"369","severity":1,"message":"375","line":34,"column":6,"nodeType":"371","endLine":34,"endColumn":14,"suggestions":"376"},{"ruleId":"353","severity":1,"message":"377","line":2,"column":44,"nodeType":"355","messageId":"356","endLine":2,"endColumn":53},{"ruleId":"353","severity":1,"message":"378","line":1,"column":41,"nodeType":"355","messageId":"356","endLine":1,"endColumn":50},{"ruleId":"353","severity":1,"message":"379","line":5,"column":25,"nodeType":"355","messageId":"356","endLine":5,"endColumn":35},{"ruleId":"349","replacedBy":"380"},{"ruleId":"351","replacedBy":"381"},{"ruleId":"353","severity":1,"message":"382","line":2,"column":17,"nodeType":"355","messageId":"356","endLine":2,"endColumn":25},{"ruleId":"353","severity":1,"message":"383","line":14,"column":10,"nodeType":"355","messageId":"356","endLine":14,"endColumn":19},{"ruleId":"353","severity":1,"message":"382","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":25},{"ruleId":"353","severity":1,"message":"378","line":1,"column":27,"nodeType":"355","messageId":"356","endLine":1,"endColumn":36},{"ruleId":"353","severity":1,"message":"384","line":1,"column":38,"nodeType":"355","messageId":"356","endLine":1,"endColumn":44},{"ruleId":"369","severity":1,"message":"385","line":57,"column":6,"nodeType":"371","endLine":57,"endColumn":36,"suggestions":"386"},{"ruleId":"349","replacedBy":"387"},{"ruleId":"351","replacedBy":"388"},{"ruleId":"353","severity":1,"message":"389","line":17,"column":17,"nodeType":"355","messageId":"356","endLine":17,"endColumn":25},{"ruleId":"369","severity":1,"message":"373","line":33,"column":6,"nodeType":"371","endLine":33,"endColumn":8,"suggestions":"390"},{"ruleId":"369","severity":1,"message":"391","line":30,"column":6,"nodeType":"371","endLine":30,"endColumn":8,"suggestions":"392"},{"ruleId":"353","severity":1,"message":"393","line":2,"column":10,"nodeType":"355","messageId":"356","endLine":2,"endColumn":16},{"ruleId":"353","severity":1,"message":"394","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":13},{"ruleId":"369","severity":1,"message":"395","line":88,"column":6,"nodeType":"371","endLine":88,"endColumn":8,"suggestions":"396"},{"ruleId":"353","severity":1,"message":"397","line":12,"column":9,"nodeType":"355","messageId":"356","endLine":12,"endColumn":14},{"ruleId":"349","replacedBy":"398"},{"ruleId":"351","replacedBy":"399"},{"ruleId":"369","severity":1,"message":"400","line":28,"column":6,"nodeType":"371","endLine":28,"endColumn":8,"suggestions":"401"},{"ruleId":"353","severity":1,"message":"393","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":16},{"ruleId":"369","severity":1,"message":"402","line":24,"column":6,"nodeType":"371","endLine":24,"endColumn":8,"suggestions":"403"},{"ruleId":"353","severity":1,"message":"393","line":7,"column":10,"nodeType":"355","messageId":"356","endLine":7,"endColumn":16},{"ruleId":"349","replacedBy":"404"},{"ruleId":"351","replacedBy":"405"},{"ruleId":"349","replacedBy":"406"},{"ruleId":"351","replacedBy":"407"},{"ruleId":"353","severity":1,"message":"393","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":16},{"ruleId":"369","severity":1,"message":"408","line":40,"column":6,"nodeType":"371","endLine":40,"endColumn":8,"suggestions":"409"},{"ruleId":"410","severity":1,"message":"411","line":15,"column":27,"nodeType":"412","messageId":"413","endLine":15,"endColumn":29},"no-native-reassign",["414"],"no-negated-in-lhs",["415"],"no-unused-vars","'errorCode' is assigned a value but never used.","Identifier","unusedVar","'source' is assigned a value but never used.",["414"],["415"],["414"],["415"],"'listenToCard' is defined but never used.","'itineraryId' is assigned a value but never used.","'cards' is assigned a value but never used.","'handleAddCard' is assigned a value but never used.","'handleModifyCard' is assigned a value but never used.","'checkModifyCard' is assigned a value but never used.","'handleRemoveCard' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'handleAddMember', 'handleModifyMember', 'handleRemoveMember', 'handleUpdateCard', and 'projectId'. Either include them or remove the dependency array.","ArrayExpression",["416"],"React Hook useEffect has missing dependencies: 'history' and 'projectId'. Either include them or remove the dependency array.",["417"],"React Hook useEffect has a missing dependency: 'handleUpdate'. Either include it or remove the dependency array.",["418"],"'useParams' is defined but never used.","'useEffect' is defined but never used.","'useKeyDown' is defined but never used.",["414"],["415"],"'useState' is defined but never used.","'OnDragEnd' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'handleDateChange' and 'startDate'. Either include them or remove the dependency array.",["419"],["414"],["415"],"'setPopUp' is assigned a value but never used.",["420"],"React Hook useEffect has missing dependencies: 'handleNoUser' and 'handleUser'. Either include them or remove the dependency array.",["421"],"'nanoid' is defined but never used.","'DayJS' is defined but never used.","React Hook useEffect has missing dependencies: 'cardId' and 'handleAddLink'. Either include them or remove the dependency array.",["422"],"'match' is assigned a value but never used.",["414"],["415"],"React Hook useEffect has missing dependencies: 'card.end_time' and 'card.start_time'. Either include them or remove the dependency array. If 'setStartDate' needs the current value of 'card.start_time', you can also switch to useReducer instead of useState and read 'card.start_time' in the reducer.",["423"],"React Hook useEffect has missing dependencies: 'cardId' and 'handleAdd'. Either include them or remove the dependency array.",["424"],["414"],["415"],["414"],["415"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["425"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},"Update the dependencies array to be: [access, dispatch, handleAddMember, handleModifyMember, handleRemoveMember, handleUpdateCard, projectId]",{"range":"446","text":"447"},"Update the dependencies array to be: [history, projectId, user]",{"range":"448","text":"449"},"Update the dependencies array to be: [handleUpdate, userId]",{"range":"450","text":"451"},"Update the dependencies array to be: [handleDateChange, location.state, plannedCards, startDate]",{"range":"452","text":"453"},"Update the dependencies array to be: [history, projectId]",{"range":"454","text":"455"},"Update the dependencies array to be: [handleNoUser, handleUser]",{"range":"456","text":"457"},"Update the dependencies array to be: [cardId, handleAddLink]",{"range":"458","text":"459"},"Update the dependencies array to be: [card.end_time, card.start_time]",{"range":"460","text":"461"},"Update the dependencies array to be: [cardId, handleAdd]",{"range":"462","text":"463"},"Update the dependencies array to be: [callback]",{"range":"464","text":"465"},[3196,3204],"[access, dispatch, handleAddMember, handleModifyMember, handleRemoveMember, handleUpdateCard, projectId]",[3520,3526],"[history, projectId, user]",[1003,1011],"[handleUpdate, userId]",[1873,1903],"[handleDateChange, location.state, plannedCards, startDate]",[844,846],"[history, projectId]",[886,888],"[handleNoUser, handleUser]",[2207,2209],"[cardId, handleAddLink]",[881,883],"[card.end_time, card.start_time]",[667,669],"[cardId, handleAdd]",[879,881],"[callback]"]