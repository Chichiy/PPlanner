[{"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/serviceWorker.js":"1","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itinerarySlice.js":"2","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/ItineraryBoard.jsx":"3","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/CardList.jsx":"4","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/Dayplans.jsx":"5","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/dayplanSlice.js":"6","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/firebase/Config.js":"7","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/cardSlice.js":"8","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/app/store.js":"9","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itineraryBoardLib.js":"10","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/Navbar.jsx":"11","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/App.jsx":"12","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/index.js":"13","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Home/Home.jsx":"14","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/userSlice.js":"15","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Projects.jsx":"16","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/projectsSlice.js":"17","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Project.jsx":"18","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/Expenditure/Expenditure.jsx":"19","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/CardBoard.jsx":"20","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/TodoList/TodoList.jsx":"21","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/component/Title.jsx":"22","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/SmallCard.jsx":"23","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/LargeCard.jsx":"24","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/membersSlice.js":"25","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/lib.js":"26","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/User.jsx":"27"},{"size":4934,"mtime":1606275674064,"results":"28","hashOfConfig":"29"},{"size":1365,"mtime":1607240114314,"results":"30","hashOfConfig":"29"},{"size":2164,"mtime":1607789082412,"results":"31","hashOfConfig":"29"},{"size":1675,"mtime":1607757097920,"results":"32","hashOfConfig":"29"},{"size":9090,"mtime":1607866883376,"results":"33","hashOfConfig":"29"},{"size":3578,"mtime":1607308456990,"results":"34","hashOfConfig":"29"},{"size":13634,"mtime":1607699893544,"results":"35","hashOfConfig":"29"},{"size":3580,"mtime":1607415911611,"results":"36","hashOfConfig":"29"},{"size":681,"mtime":1607532777624,"results":"37","hashOfConfig":"29"},{"size":2381,"mtime":1606805397461,"results":"38","hashOfConfig":"29"},{"size":9174,"mtime":1607876789082,"results":"39","hashOfConfig":"29"},{"size":2108,"mtime":1607869043312,"results":"40","hashOfConfig":"29"},{"size":621,"mtime":1607507551414,"results":"41","hashOfConfig":"29"},{"size":433,"mtime":1606889043646,"results":"42","hashOfConfig":"29"},{"size":1118,"mtime":1607872537526,"results":"43","hashOfConfig":"29"},{"size":2098,"mtime":1607532329029,"results":"44","hashOfConfig":"29"},{"size":1916,"mtime":1607261062734,"results":"45","hashOfConfig":"29"},{"size":4758,"mtime":1607532606676,"results":"46","hashOfConfig":"29"},{"size":264,"mtime":1606896002777,"results":"47","hashOfConfig":"29"},{"size":2692,"mtime":1607667594680,"results":"48","hashOfConfig":"29"},{"size":255,"mtime":1606903395627,"results":"49","hashOfConfig":"29"},{"size":1389,"mtime":1607360464022,"results":"50","hashOfConfig":"29"},{"size":5447,"mtime":1607431644719,"results":"51","hashOfConfig":"29"},{"size":19324,"mtime":1607876279503,"results":"52","hashOfConfig":"29"},{"size":1728,"mtime":1607532798909,"results":"53","hashOfConfig":"29"},{"size":1052,"mtime":1607876735008,"results":"54","hashOfConfig":"29"},{"size":3934,"mtime":1607880120154,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"19e0as4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/serviceWorker.js",[],["129","130"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itinerarySlice.js",["131","132"],"import { createSlice } from \"@reduxjs/toolkit\"\nimport { getData, getFsData } from \"../../../../firebase/Config\"\n\nexport const itinerarySlice = createSlice({\n  name: \"itinerary\",\n  initialState: {},\n  reducers: {\n    initItinerary: (state, action) => {\n      for (let key in action.payload) {\n        state[key] = action.payload[key]\n      }\n    },\n    deleteDayplan: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const { initItinerary } = itinerarySlice.actions\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount))\n//   }, 1000)\n// }\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.itinerary.value)`\n// export const selectCount = (state) => state.itinerary.value\n\nexport default itinerarySlice.reducer\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/ItineraryBoard.jsx",["133","134","135","136","137","138","139","140","141","142"],"//tools\nimport React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\"\nimport { DragDropContext } from \"react-beautiful-dnd\"\n\n//components and scss\n\nimport CardList from \"./CardList\"\nimport Dayplans from \"./Dayplans\"\nimport styles from \"../../../../scss/itineraryBoard.module.scss\"\n\n//functions\nimport { OnDragEnd } from \"./itineraryBoardLib\"\nimport { updateCard_Fs } from \"../../../../firebase/Config\"\n\nconst ItineraryBoard = () => {\n  let { itineraryId, projectId } = useParams()\n\n  //needed state\n  const itinerary = useSelector((state) => state.itinerary)\n  // const dayplans = useSelector((state) => state.dayplans)\n  const cards = useSelector((state) => state.cards)\n\n  const [filterMethod] = useState(\"status\")\n\n  const filterCards = () => {\n    switch (filterMethod) {\n      default: {\n        return cards.filter((card) => card.status === 0)\n      }\n    }\n  }\n\n  // //register needed dispatch\n  const dispatch = useDispatch()\n\n  const handleOnDragEnd = (result) => {\n    console.log(\"dragend\")\n    // OnDragEnd(dispatch, result, itinerary, filterCards)\n    let targetCardId = result.draggableId\n    let target = cards.find((card) => card.id === targetCardId)\n    let startTime = new Date(target.start_time)\n    let endTime = new Date(target.end_time)\n    let timeSpan = endTime.getTime() - startTime.getTime()\n    let newStartTime = new Date()\n    newStartTime.setTime(result.destination.droppableId)\n    let newEndTime = new Date()\n    newEndTime.setTime(newStartTime.getTime() + timeSpan)\n\n    let change = {\n      start_time: newStartTime,\n      end_time: newEndTime,\n    }\n\n    updateCard_Fs(projectId, targetCardId, change)\n  }\n  const handleOnDragStart = (result) => {\n    console.log(result)\n  }\n\n  return (\n    <div className={styles.view}>\n      <DragDropContext\n        onDragStart={handleOnDragStart}\n        onDragEnd={handleOnDragEnd}\n      >\n        <CardList cards={filterCards()} />\n        <Dayplans />\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default ItineraryBoard\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/CardList.jsx",["143"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/Dayplans.jsx",["144","145","146","147","148","149","150","151","152"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/dayplanSlice.js",[],["153","154"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/firebase/Config.js",["155","156"],"import firebase from \"firebase/app\"\nimport \"firebase/analytics\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAxbnsUNTG2SYqUsC2QqIbBo1OLuKXeZ-g\",\n  authDomain: \"pplanner-bfb1a.firebaseapp.com\",\n  databaseURL: \"https://pplanner-bfb1a.firebaseio.com\",\n  projectId: \"pplanner-bfb1a\",\n  storageBucket: \"pplanner-bfb1a.appspot.com\",\n  messagingSenderId: \"501383303118\",\n  appId: \"1:501383303118:web:a6c81e2be82826845e659f\",\n  measurementId: \"G-FETYRNE2VX\",\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\n//abbreviation\nvar db = firebase.firestore()\n\nconst defaultID = \"aJyjoGPEIH69isQ7QfYs\"\n\nexport const toDate = firebase.firestore.Timestamp.toDate\n\n//////listening to cloud data///////\nexport const listenToMembers = (\n  projectId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"users\")\n    .where(\"projects\", \"array-contains\", projectId)\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          //add id to data\n          data.id = id\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToProjects = (\n  userId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"projects\")\n    .where(\"members\", \"array-contains\", userId)\n    .onSnapshot(function (snapshot) {\n      let temp = []\n      snapshot.docChanges().forEach(function (change) {\n        let changes = change.doc.data()\n        if (change.type === \"added\") {\n          // console.log(\"add \", changes, \"to local state\")\n          handleAdd(changes)\n        }\n        if (change.type === \"modified\") {\n          handleModify(changes)\n          console.log(\"modify \", changes, \"to local state\")\n        }\n        if (change.type === \"removed\") {\n          handleRemove(changes)\n          console.log(\"Removed: \", changes, \"from local state\")\n        }\n        temp.push(changes)\n      })\n    })\n  return unsubscribe\n}\n\nexport const listenToDayplans = (\n  itineraryId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"dayplans\")\n    .where(\"itinerary_id\", \"==\", itineraryId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.date = data.date.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToCard = (\n  projectId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"projects\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n\n          // console.log(source, type, id, data)\n          //add id to data\n          data.id = id\n\n          if (data.start_time) {\n            //conver time object to string\n            data.start_time = data.start_time.toDate().toString()\n            data.end_time = data.end_time.toDate().toString()\n          }\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToComments = (\n  cardId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"comments\")\n    .where(\"card_id\", \"==\", cardId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      // console.log(source, snapshot, docChange)\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n          // console.log(source, type, id, data)\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.date = data.date.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\nexport const listenToLinks = (\n  cardId,\n  handleAdd,\n  handleModify,\n  handleRemove\n) => {\n  let unsubscribe = db\n    .collection(\"links\")\n    .where(\"card_id\", \"==\", cardId)\n    .orderBy(\"date\", \"asc\")\n    .onSnapshot({ includeMetadataChanges: true }, function (snapshot) {\n      var docChange = snapshot.docChanges()\n      var source = snapshot.metadata.hasPendingWrites ? \"local\" : \"server\"\n\n      // console.log(source, snapshot, docChange)\n\n      //local data needs to be changed\n      if (docChange.length > 0) {\n        snapshot.docChanges().forEach(function (change) {\n          let type = change.type\n          let id = change.doc.id\n          let data = change.doc.data()\n          // console.log(source, type, id, data)\n\n          //add id to data\n          data.id = id\n          //conver time object to string\n          data.date = data.date.toDate().toString()\n\n          if (type === \"added\") {\n            handleAdd(data, source)\n          }\n          if (type === \"modified\") {\n            handleModify(data, source)\n          }\n          if (type === \"removed\") {\n            handleRemove(data, source)\n          }\n        })\n      } else {\n        //changes have been saved\n        console.log(\"data has been saved to cloud database\")\n      }\n    })\n  return unsubscribe\n}\n\n//////update cloud data//////\n\n//basic function\nexport const update = (collection, doc, fileds) => {\n  let docRef = db.collection(collection).doc(doc)\n\n  return docRef\n    .update(fileds)\n    .then(function () {\n      console.log(\"Document successfully updated!\")\n    })\n    .then(docRef.update({ onChange: \"\" }))\n    .catch(function (error) {\n      // The document probably doesn't exist.\n      console.error(\"Error updating document: \", error)\n    })\n}\n\n//update project title in nav bar\nexport const updateProjectTitle_Fs = (projectId, input) => {\n  let docRef = db.collection(\"projects\").doc(projectId)\n  let changes = {\n    title: input,\n  }\n  return docRef\n    .update(changes)\n    .then(function () {\n      console.log(\"Document successfully updated project title!\")\n    })\n    .catch(function (error) {\n      console.error(\"Error updating document: \", error)\n    })\n}\n\n//////cards related//////\nexport const AddCard_Fs = (projectId, input) => {\n  let docRef = db.collection(\"projects\").doc(projectId).collection(\"cards\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateCard_Fs = (projectId, cardId, change) => {\n  // expected format:\n  // let change = {\n  //   title: input,\n  // }\n\n  let docRef = db\n    .collection(\"projects\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .doc(cardId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const addComment_Fs = (input) => {\n  // expected format:\n  // let input = {\n  // card_id: cardId,\n  // sender_id: userId,\n  // content: pending,\n  // date: date object,\n  // }\n\n  let docRef = db.collection(\"comments\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateComment_Fs = (commentId, change) => {\n  // expected format:\n  // let change = {\n  //   content: input,\n  // }\n\n  let docRef = db.collection(\"comments\").doc(commentId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const removeComment_Fs = (commentId) => {\n  let docRef = db.collection(\"comments\").doc(commentId)\n\n  return docRef.delete().catch(function (error) {\n    console.error(\"Error deleting document: \", error)\n  })\n}\n\nexport const addLink_Fs = (input) => {\n  // expected format:\n  // let input = {\n  // card_id: cardId,\n  // url: url,\n  // title: string,\n  // date: date object,\n  // }\n\n  let docRef = db.collection(\"links\")\n\n  return docRef.add(input).catch(function (error) {\n    console.error(\"Error adding document: \", error)\n  })\n}\n\nexport const updateLink_Fs = (linkId, change) => {\n  // expected format:\n  // let change = {\n  //   title: input,\n  // }\n\n  let docRef = db.collection(\"links\").doc(linkId)\n\n  return docRef.update(change).catch(function (error) {\n    console.error(\"Error updating document: \", error)\n  })\n}\n\nexport const removeLink_Fs = (linkId) => {\n  let docRef = db.collection(\"links\").doc(linkId)\n\n  return docRef.delete().catch(function (error) {\n    console.error(\"Error deleting document: \", error)\n  })\n}\n\nexport const addDayplan_Fs = (input) => {\n  let docRef = db.collection(\"dayplans\")\n\n  return docRef\n    .add(input)\n    .then(function (newDayplan) {\n      newDayplan.update({\n        id: newDayplan.id,\n      })\n    })\n    .catch(function (error) {\n      console.error(\"Error adding document: \", error)\n    })\n}\n\n// // Atomically add a new region to the \"regions\" array field.\n// washingtonRef.update({\n//   regions: firebase.firestore.FieldValue.arrayUnion(\"greater_virginia\")\n// });\n\n// // Atomically remove a region from the \"regions\" array field.\n// washingtonRef.update({\n//   regions: firebase.firestore.FieldValue.arrayRemove(\"east_coast\")\n// });\n\n//////initialize local data//////\n\nexport function getFsData_Itinerary(project_id, field, operators, value) {\n  return db\n    .collection(\"projects\")\n    .doc(project_id)\n    .collection(\"itineraries\")\n    .orderBy(\"created_time\", \"desc\") //get the latest version of itineray\n    .limit(1)\n    .get()\n    .then(function (querySnapshot) {\n      let temp\n      querySnapshot.forEach(function (doc) {\n        temp = doc.data()\n      })\n      return temp\n    })\n    .then((res) => {\n      //conver time object to string\n      res.created_time = res.created_time.toDate().toString()\n      return res\n    })\n    .catch(function (error) {\n      console.log(\"Error getting documents: \", error)\n    })\n}\n\n//not sure what to do\n\nexport const listenToData = (callback) => {\n  db.collection(\"test\")\n    .doc(\"2eddU3pn48Llu7Ji60Nz\")\n    .onSnapshot(function (doc) {\n      var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\"\n      let data = doc.data()\n      callback(data)\n    })\n}\n\nexport const updateCards = (projectId, cardId, changes) => {\n  let docRef = db\n    .collection(\"project\")\n    .doc(projectId)\n    .collection(\"cards\")\n    .doc(cardId)\n\n  return (\n    docRef\n      .update(changes)\n      .then(function () {\n        console.log(\"Document successfully updated!\")\n      })\n      // .then(docRef.update({ onChange: \"\" }))\n      .catch(function (error) {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error)\n      })\n  )\n}\n\nexport const updateSchedule = (dayplanId, changes) => {\n  let docRef = db.collection(\"dayplans\").doc(dayplanId)\n\n  return (\n    docRef\n      .update({ schedule: changes })\n      .then(function () {\n        console.log(\"Document successfully updated!\")\n      })\n      // .then(docRef.update({ onChange: \"\" }))\n      .catch(function (error) {\n        // The document probably doesn't exist.\n        console.error(\"Error updating document: \", error)\n      })\n  )\n}\n",["157","158"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/cardSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/app/store.js",[],["159","160"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itineraryBoardLib.js",[],["161","162"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/Navbar.jsx",["163","164","165","166","167","168","169","170","171","172","173"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/App.jsx",["174","175","176","177"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/index.js",[],["178","179"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Home/Home.jsx",["180","181"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport styles from \"./home.module.scss\"\n\nconst Home = () => {\n  return (\n    <div className={styles.view}>\n      <div className={styles.banner}>\n        現在開始規劃旅行吧！\n        <br />\n        <Link to=\"/projects\" className={styles.button_border}>\n          GO\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/userSlice.js",["182"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Projects.jsx",["183","184","185","186"],"import React, { useState, useEffect } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { nanoid } from \"@reduxjs/toolkit\"\n\nimport styles from \"./projects.module.scss\"\n\nimport Navbar from \"../Navbar/Navbar\"\nimport Project from \"./Project\"\n\nimport { listenToProjects } from \"../../firebase/Config\"\nimport { addProjects, modifyProjects, removeProjects } from \"./projectsSlice\"\nconst Projects = () => {\n  // console.log(\"render projects\")\n  let dispatch = useDispatch()\n  let match = useRouteMatch()\n  let projects = useSelector((state) => state.projects)\n  let userId = useSelector((state) => state.user.id)\n\n  const handleAddProject = (res) => {\n    dispatch(addProjects(res))\n  }\n\n  const handleModifyProject = (res) => {\n    dispatch(modifyProjects(res))\n  }\n\n  const handleRemoveProject = (res) => {\n    dispatch(removeProjects(res))\n  }\n\n  //init and listen to changes\n  useEffect(() => {\n    listenToProjects(\n      userId,\n      handleAddProject,\n      handleModifyProject,\n      handleRemoveProject\n    )\n  }, [])\n\n  return (\n    <div className={styles.view}>\n      <Switch>\n        <Route exact path={match.path}>\n          <Navbar type=\"default\" />\n          <div className={styles.container}>\n            {projects.map((project) => {\n              return (\n                <Link to={`${match.url}/${project.id}`} key={project.id}>\n                  <div className={styles.project}>\n                    <span className={styles.projectTitle}>{project.title}</span>\n                  </div>\n                </Link>\n              )\n            })}\n            <Link to={`${match.url}`} key={nanoid()}>\n              <div className={styles.addProject}>\n                <span className={styles.projectTitle}>新增旅行</span>\n              </div>\n            </Link>\n          </div>\n        </Route>\n\n        <Route path={`${match.path}/:projectId`}>\n          <Project />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default Projects\n",["187","188"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/projectsSlice.js",["189","190"],"import { createSlice } from \"@reduxjs/toolkit\"\nimport { getData, getFsData } from \"../../firebase/Config\"\n\nexport const projectsSlice = createSlice({\n  name: \"projects\",\n  initialState: [],\n  reducers: {\n    addProjects: (state, action) => {\n      let target = action.payload\n\n      //prevent repeatly adding\n      if (state.findIndex((project) => project.id === target.id) < 0) {\n        state.push(target)\n      }\n    },\n    removeProjects: (state, action) => {\n      let target = action.payload\n      let index = state.findIndex((project) => project.id === target.id)\n      state.splice(index, 1)\n    },\n    modifyProjects: (state, action) => {\n      let target = action.payload\n      let index = state.findIndex((project) => project.id === target.id)\n      state.splice(index, 1, target)\n    },\n\n    editProjectTitle: (state, action) => {\n      let target = state.find(\n        (project) => project.id === action.payload.projectId\n      )\n      target.title = action.payload.newTitle\n    },\n  },\n})\n\nexport const {\n  addProjects,\n  removeProjects,\n  modifyProjects,\n  editProjectTitle,\n} = projectsSlice.actions\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount))\n//   }, 1000)\n// }\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.projects.value)`\n// export const selectCount = (state) => state.projects.value\n\nexport default projectsSlice.reducer\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Project.jsx",["191","192","193","194","195","196","197","198"],"import React, { useState, useEffect } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { nanoid } from \"@reduxjs/toolkit\"\n\nimport styles from \"./project.module.scss\"\nimport Navbar from \"../Navbar/Navbar\"\nimport ItineraryBoard from \"./feature/itineraryBoard/ItineraryBoard\"\nimport CardBoard from \"./feature/CardBoard/CardBoard\"\nimport Expenditure from \"./feature/Expenditure/Expenditure\"\nimport TodoList from \"./feature/TodoList/TodoList\"\n\nimport {\n  getFsData_Itinerary,\n  listenToDayplans,\n  listenToCard,\n  listenToMembers,\n} from \"../../firebase/Config\"\n\nimport { initItinerary } from \"./feature/itineraryBoard/itinerarySlice\"\nimport {\n  addDayplan,\n  modifyDayplan,\n  removeDayplan,\n} from \"./feature/itineraryBoard/dayplanSlice\"\nimport {\n  addCard,\n  modifyCard,\n  removeCard,\n  initCards,\n} from \"./feature/CardBoard/cardSlice\"\n\nimport { addMember, modifyMember, removeMember } from \"../User/membersSlice\"\n\nconst Project = () => {\n  // console.log(\"rerender Project component\")\n\n  let { projectId } = useParams()\n  let match = useRouteMatch()\n  let projects = useSelector((state) => state.projects)\n  let itineraryId = useSelector((state) => state.itinerary.id)\n  let cards = useSelector((state) => state.cards)\n  const dispatch = useDispatch()\n\n  const handleAddDayplan = (res) => {\n    dispatch(addDayplan(res))\n  }\n\n  const handleModifyDayplan = (res) => {\n    dispatch(modifyDayplan(res))\n  }\n\n  const handleRemoveDayplan = (res) => {\n    dispatch(removeDayplan(res))\n  }\n\n  const handleAddCard = (res, source) => {\n    dispatch(addCard(res))\n  }\n\n  const handleModifyCard = (res, source) => {\n    dispatch(modifyCard(res))\n  }\n\n  const handleRemoveCard = (res, source) => {\n    dispatch(removeCard(res))\n  }\n\n  const handleAddMember = (res, source) => {\n    let input = {\n      id: res.id,\n      name: res.name,\n      picture: res.picture,\n    }\n    dispatch(addMember(input))\n  }\n\n  const handleModifyMember = (res, source) => {\n    let input = {\n      id: res.id,\n      name: res.name,\n      picture: res.picture,\n    }\n    dispatch(modifyMember(input))\n  }\n\n  const handleRemoveMember = (res, source) => {\n    let input = {\n      id: res.id,\n      name: res.name,\n      picture: res.picture,\n    }\n    dispatch(removeMember(input))\n  }\n\n  //init and listen to changes\n  useEffect(() => {\n    // initial itinerary with latest version\n    getFsData_Itinerary(projectId).then((itinerary) => {\n      //initial and listen to dayplans\n      let unsubscribeToDayplan = listenToDayplans(\n        itinerary.id,\n        handleAddDayplan,\n        handleModifyDayplan,\n        handleRemoveDayplan\n      )\n      dispatch(initItinerary(itinerary))\n    })\n\n    let unsubscribeToCard = listenToCard(\n      projectId,\n      handleAddCard,\n      handleModifyCard,\n      handleRemoveCard\n    )\n\n    let unsubscribeToMembers = listenToMembers(\n      projectId,\n      handleAddMember,\n      handleModifyMember,\n      handleRemoveMember\n    )\n\n    return () => {\n      unsubscribeToCard()\n      unsubscribeToMembers()\n    }\n  }, [])\n\n  // useEffect(() => {\n  //   // initial itinerary with latest version\n  //   getFsData_Itinerary(projectId).then((itinerary) => {\n  //     //initial dayplans\n  //     getFsData(\"dayplans\", \"itinerary_id\", \"==\", itinerary.id).then(\n  //       (dayplan) => {\n  //         dispatch(initItinerary(itinerary))\n  //         dispatch(initDayplans(dayplan))\n  //       }\n  //     )\n  //   })\n\n  //initial cards\n  //   getFsData_Cards(projectId).then((res) => {\n  //     dispatch(initCards(res))\n  //   })\n  //   console.log(\"init dayplans and cards\")\n  // }, [projectId])\n\n  return (\n    <Switch>\n      <Route exact path={match.path}>\n        <Navbar type=\"project\" />\n        <div className={styles.container}>\n          <ul>\n            <Link to={`${match.url}/todoList`}>待辦事項</Link>\n\n            <Link to={`${match.url}/cards`}>卡片板</Link>\n\n            <Link to={`${match.url}/itineraries/${itineraryId}`}>行程板</Link>\n\n            <Link to={`${match.url}/expenditure`}>花費板</Link>\n          </ul>\n        </div>\n      </Route>\n      <Route path={`${match.path}/itineraries/:itineraryId`}>\n        <Navbar type=\"itineraries\" />\n        <ItineraryBoard />\n      </Route>\n      <Route path={`${match.path}/cards`}>\n        <Navbar type=\"cards\" />\n        <CardBoard />\n      </Route>\n      <Route path={`${match.path}/expenditure`}>\n        <Navbar type=\"expenditure\" />\n        <Expenditure />\n      </Route>\n      <Route path={`${match.path}/todoList`}>\n        <Navbar type=\"todoList\" />\n        <TodoList />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Project\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/Expenditure/Expenditure.jsx",["199","200"],"import React, { useState, useEffect } from \"react\"\n\n// import styles from \"../../../scss/cardBoard.module.scss\"\n\nconst Expenditure = () => {\n  return (\n    <div>\n      <br />\n      <br />\n      <br />\n      Expenditure\n    </div>\n  )\n}\n\nexport default Expenditure\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/CardBoard.jsx",["201","202","203","204","205"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/TodoList/TodoList.jsx",["206","207"],"import React, { useState, useEffect } from \"react\"\n\n// import styles from \"../../../scss/cardBoard.module.scss\"\n\nconst TodoList = () => {\n  return (\n    <div>\n      <br />\n      <br />\n      <br />\n      todoList\n    </div>\n  )\n}\n\nexport default TodoList\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/component/Title.jsx",["208","209","210","211","212","213","214","215","216"],"import React, { useState, useEffect } from \"react\"\nimport {\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n} from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport styles from \"../navbar.module.scss\"\n\nimport { updateProjectTitle_Fs } from \"../../../firebase/Config\"\nimport { editProjectTitle } from \"../../Project/projectsSlice\"\n\nconst Title = ({ projectId, title }) => {\n  let projectTitle = title ? title : null\n  let [isEditing, setEditing] = useState(false)\n  let [pending, setPending] = useState(\"\")\n\n  //update pending\n  useEffect(() => {\n    setPending(projectTitle)\n  }, [projectTitle])\n\n  let dispatch = useDispatch()\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      //update cloud data\n      updateProjectTitle_Fs(projectId, e.target.value)\n\n      setEditing(!isEditing)\n    }\n  }\n\n  if (!isEditing) {\n    return (\n      <div\n        className={styles.item}\n        onClick={() => {\n          setEditing(!isEditing)\n        }}\n      >\n        {projectTitle}\n      </div>\n    )\n  } else {\n    return (\n      <input\n        type=\"text\"\n        className={styles.editTitle}\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n        autoFocus\n      />\n    )\n  }\n}\n\nexport default Title\n",["217","218"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/SmallCard.jsx",["219"],"import React, { useState, useEffect } from \"react\"\n\nimport styles from \"../cardBoard.module.scss\"\n\nconst fakeImg = \"https://fakeimg.pl/65x65/\"\n\nexport const SmallCard = ({ card }) => {\n  return (\n    <div id={card.id} className={styles.card_small}>\n      <div className={styles[`tag_${card.category}`]}></div>\n      <div className={styles.info}>\n        <div className={styles.card_small_picture}>\n          <img src={card.cover_pic} alt=\"pic\" />\n        </div>\n        <div className={styles.details}>\n          <div className={styles.title}>{card.title}</div>\n          <div className={styles.description}>{card.description}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const AddCard = ({ pendingInfo, setPendingInfo, shouldAddCard }) => {\n  //new card data\n  // const emptyCard = {\n  //   title: \"\",\n  //   description: \"\",\n  //   category: \"default\",\n  // }\n\n  // const [pendingInfo, setPendingInfo] = useState(emptyCard)\n\n  // useEffect(() => {\n  //   return () => {\n  //     console.log(\"unmount\")\n  //   }\n  // })\n\n  // console.log(pendingInfo !== emptyCard)\n  // pendingInfo, setPendingInfo, shouldAddCard\n  //detemine should add card or not\n  // if (pendingInfo !== emptyCard) {\n  //   shouldAddCard(true)\n  // }\n\n  //category related\n  const [selectCategory, setCategory] = useState(false)\n  const toggleCategorySelect = (e) => {\n    if (e.target.id === \"pendingCategory\") {\n      setCategory(!selectCategory)\n    }\n  }\n  const updateCategory = (e) => {\n    setPendingInfo({\n      ...pendingInfo,\n      category: e.target.value,\n      tags: [e.target.value],\n    })\n    setCategory(!selectCategory)\n  }\n\n  const updateTitle = (input) => {\n    setPendingInfo({ ...pendingInfo, title: input })\n  }\n\n  const updateDescription = (input) => {\n    setPendingInfo({ ...pendingInfo, description: input })\n  }\n\n  return (\n    <div className={styles.card_small}>\n      <div\n        id=\"pendingCategory\"\n        className={styles[`tag_${pendingInfo.category}`]}\n        onClick={toggleCategorySelect}\n      >\n        {selectCategory ? (\n          <SelectCategory handleSelectCategory={updateCategory} />\n        ) : null}\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.card_small_picture}>\n          <img src={fakeImg} alt=\"pic\" />\n        </div>\n        <div className={styles.details}>\n          <PendingTitle\n            pendingTitle={pendingInfo.title}\n            handleTitleUpdate={updateTitle}\n          />\n\n          <PendingDescription\n            pendingDescription={pendingInfo.description}\n            handleDescriptionUpdate={updateDescription}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n////////////Title////////////\n\nconst PendingTitle = (props) => {\n  const [isEditing, setEditing] = useState(true)\n  const [pending, setPending] = useState(\"\")\n\n  let { pendingTitle, handleTitleUpdate } = props\n\n  const toggleInputTitle = (e) => {\n    if (e.target.id === \"pendingTitle\") {\n      setEditing(!isEditing)\n    }\n  }\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      if (e.target.value) {\n        setEditing(!isEditing)\n        handleTitleUpdate(e.target.value)\n      } else {\n        handleTitleUpdate(\"\")\n      }\n    }\n  }\n\n  if (isEditing) {\n    return (\n      <input\n        type=\"text\"\n        className={styles.inputTitle}\n        placeholder=\"編輯標題\"\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n        autoFocus\n      />\n    )\n  } else {\n    return (\n      <div\n        id=\"pendingTitle\"\n        className={styles.title}\n        onClick={toggleInputTitle}\n      >\n        {pendingTitle}\n      </div>\n    )\n  }\n}\n\n////////////Description////////////\n\nconst PendingDescription = (props) => {\n  const [isEditing, setEditing] = useState(true)\n  const [pending, setPending] = useState(\"\")\n\n  let { pendingDescription, handleDescriptionUpdate } = props\n\n  const toggleInputDescription = (e) => {\n    if (e.target.id === \"pendingDescription\") {\n      setEditing(!isEditing)\n    }\n  }\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      if (e.target.value) {\n        setEditing(!isEditing)\n        handleDescriptionUpdate(e.target.value)\n      } else {\n        handleDescriptionUpdate(\"\")\n      }\n    }\n  }\n\n  if (isEditing) {\n    return (\n      <textarea\n        type=\"text\"\n        className={styles.inputDescription}\n        placeholder=\"編輯描述\"\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n      />\n    )\n  } else {\n    return (\n      <div\n        id=\"pendingDescription\"\n        className={styles.description}\n        onClick={toggleInputDescription}\n      >\n        {pendingDescription}\n      </div>\n    )\n  }\n}\n\n////////////Category////////////\n\nconst SelectCategory = (props) => {\n  const categories = [\"food\", \"hotel\", \"country\", \"site\", \"commute\", \"default\"]\n  let handleSelectCategory = props.handleSelectCategory\n\n  return (\n    <div className={styles.selectCategory}>\n      {categories.map((category) => {\n        return (\n          <option\n            value={category}\n            className={styles[`category_${category}`]}\n            onClick={handleSelectCategory}\n          >\n            {category}\n          </option>\n        )\n      })}\n    </div>\n  )\n}\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/LargeCard.jsx",["220","221","222","223","224","225","226","227","228"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/membersSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/lib.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/User.jsx",["229","230","231","232","233","234","235","236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":17},{"ruleId":"241","severity":1,"message":"245","line":2,"column":19,"nodeType":"243","messageId":"244","endLine":2,"endColumn":28},{"ruleId":"241","severity":1,"message":"246","line":2,"column":27,"nodeType":"243","messageId":"244","endLine":2,"endColumn":36},{"ruleId":"241","severity":1,"message":"247","line":5,"column":20,"nodeType":"243","messageId":"244","endLine":5,"endColumn":26},{"ruleId":"241","severity":1,"message":"248","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":9},{"ruleId":"241","severity":1,"message":"249","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":8},{"ruleId":"241","severity":1,"message":"250","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":7},{"ruleId":"241","severity":1,"message":"251","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":16},{"ruleId":"241","severity":1,"message":"252","line":21,"column":10,"nodeType":"243","messageId":"244","endLine":21,"endColumn":19},{"ruleId":"241","severity":1,"message":"253","line":25,"column":9,"nodeType":"243","messageId":"244","endLine":25,"endColumn":20},{"ruleId":"241","severity":1,"message":"254","line":28,"column":9,"nodeType":"243","messageId":"244","endLine":28,"endColumn":18},{"ruleId":"241","severity":1,"message":"255","line":43,"column":9,"nodeType":"243","messageId":"244","endLine":43,"endColumn":17},{"ruleId":"241","severity":1,"message":"256","line":17,"column":9,"nodeType":"243","messageId":"244","endLine":17,"endColumn":22},{"ruleId":"241","severity":1,"message":"257","line":2,"column":17,"nodeType":"243","messageId":"244","endLine":2,"endColumn":25},{"ruleId":"241","severity":1,"message":"250","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":7},{"ruleId":"241","severity":1,"message":"251","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":16},{"ruleId":"241","severity":1,"message":"258","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":12},{"ruleId":"241","severity":1,"message":"249","line":11,"column":3,"nodeType":"243","messageId":"244","endLine":11,"endColumn":8},{"ruleId":"241","severity":1,"message":"248","line":12,"column":3,"nodeType":"243","messageId":"244","endLine":12,"endColumn":9},{"ruleId":"241","severity":1,"message":"259","line":13,"column":3,"nodeType":"243","messageId":"244","endLine":13,"endColumn":13},{"ruleId":"241","severity":1,"message":"260","line":19,"column":10,"nodeType":"243","messageId":"244","endLine":19,"endColumn":23},{"ruleId":"241","severity":1,"message":"261","line":81,"column":9,"nodeType":"243","messageId":"244","endLine":81,"endColumn":21},{"ruleId":"237","replacedBy":"262"},{"ruleId":"239","replacedBy":"263"},{"ruleId":"241","severity":1,"message":"264","line":23,"column":7,"nodeType":"243","messageId":"244","endLine":23,"endColumn":16},{"ruleId":"241","severity":1,"message":"265","line":479,"column":11,"nodeType":"243","messageId":"244","endLine":479,"endColumn":17},{"ruleId":"237","replacedBy":"266"},{"ruleId":"239","replacedBy":"267"},{"ruleId":"237","replacedBy":"268"},{"ruleId":"239","replacedBy":"269"},{"ruleId":"237","replacedBy":"270"},{"ruleId":"239","replacedBy":"271"},{"ruleId":"241","severity":1,"message":"272","line":11,"column":23,"nodeType":"243","messageId":"244","endLine":11,"endColumn":34},{"ruleId":"241","severity":1,"message":"273","line":28,"column":15,"nodeType":"243","messageId":"244","endLine":28,"endColumn":23},{"ruleId":"241","severity":1,"message":"274","line":30,"column":7,"nodeType":"243","messageId":"244","endLine":30,"endColumn":12},{"ruleId":"241","severity":1,"message":"275","line":163,"column":7,"nodeType":"243","messageId":"244","endLine":163,"endColumn":15},{"ruleId":"241","severity":1,"message":"276","line":164,"column":9,"nodeType":"243","messageId":"244","endLine":164,"endColumn":18},{"ruleId":"241","severity":1,"message":"275","line":211,"column":7,"nodeType":"243","messageId":"244","endLine":211,"endColumn":15},{"ruleId":"241","severity":1,"message":"276","line":212,"column":9,"nodeType":"243","messageId":"244","endLine":212,"endColumn":18},{"ruleId":"277","severity":1,"message":"278","line":302,"column":6,"nodeType":"279","endLine":302,"endColumn":23,"suggestions":"280"},{"ruleId":"277","severity":1,"message":"281","line":302,"column":7,"nodeType":"282","endLine":302,"endColumn":22},{"ruleId":"277","severity":1,"message":"283","line":318,"column":6,"nodeType":"279","endLine":318,"endColumn":17,"suggestions":"284"},{"ruleId":"241","severity":1,"message":"285","line":384,"column":7,"nodeType":"243","messageId":"244","endLine":384,"endColumn":17},{"ruleId":"241","severity":1,"message":"250","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":7},{"ruleId":"241","severity":1,"message":"251","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":16},{"ruleId":"241","severity":1,"message":"258","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":12},{"ruleId":"241","severity":1,"message":"286","line":14,"column":8,"nodeType":"243","messageId":"244","endLine":14,"endColumn":12},{"ruleId":"237","replacedBy":"287"},{"ruleId":"239","replacedBy":"288"},{"ruleId":"241","severity":1,"message":"257","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"289","severity":1,"message":"290","line":15,"column":14,"nodeType":"291","messageId":"292","endLine":15,"endColumn":16},{"ruleId":"241","severity":1,"message":"257","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"247","line":3,"column":20,"nodeType":"243","messageId":"244","endLine":3,"endColumn":26},{"ruleId":"241","severity":1,"message":"258","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":12},{"ruleId":"277","severity":1,"message":"293","line":47,"column":6,"nodeType":"279","endLine":47,"endColumn":8,"suggestions":"294"},{"ruleId":"237","replacedBy":"295"},{"ruleId":"239","replacedBy":"296"},{"ruleId":"241","severity":1,"message":"242","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":17},{"ruleId":"241","severity":1,"message":"245","line":2,"column":19,"nodeType":"243","messageId":"244","endLine":2,"endColumn":28},{"ruleId":"241","severity":1,"message":"257","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"247","line":3,"column":20,"nodeType":"243","messageId":"244","endLine":3,"endColumn":26},{"ruleId":"241","severity":1,"message":"297","line":11,"column":10,"nodeType":"243","messageId":"244","endLine":11,"endColumn":16},{"ruleId":"241","severity":1,"message":"298","line":37,"column":3,"nodeType":"243","messageId":"244","endLine":37,"endColumn":12},{"ruleId":"241","severity":1,"message":"299","line":47,"column":7,"nodeType":"243","messageId":"244","endLine":47,"endColumn":15},{"ruleId":"241","severity":1,"message":"300","line":49,"column":7,"nodeType":"243","messageId":"244","endLine":49,"endColumn":12},{"ruleId":"241","severity":1,"message":"301","line":108,"column":11,"nodeType":"243","messageId":"244","endLine":108,"endColumn":31},{"ruleId":"277","severity":1,"message":"302","line":135,"column":6,"nodeType":"279","endLine":135,"endColumn":8,"suggestions":"303"},{"ruleId":"241","severity":1,"message":"257","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"259","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"304","line":19,"column":10,"nodeType":"243","messageId":"244","endLine":19,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":39,"column":29,"nodeType":"307","messageId":"308","endLine":39,"endColumn":31},{"ruleId":"241","severity":1,"message":"255","line":61,"column":9,"nodeType":"243","messageId":"244","endLine":61,"endColumn":17},{"ruleId":"241","severity":1,"message":"257","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"250","line":3,"column":3,"nodeType":"243","messageId":"244","endLine":3,"endColumn":7},{"ruleId":"241","severity":1,"message":"251","line":4,"column":3,"nodeType":"243","messageId":"244","endLine":4,"endColumn":16},{"ruleId":"241","severity":1,"message":"258","line":5,"column":3,"nodeType":"243","messageId":"244","endLine":5,"endColumn":12},{"ruleId":"241","severity":1,"message":"309","line":6,"column":3,"nodeType":"243","messageId":"244","endLine":6,"endColumn":14},{"ruleId":"241","severity":1,"message":"249","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":8},{"ruleId":"241","severity":1,"message":"248","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":9},{"ruleId":"241","severity":1,"message":"310","line":10,"column":10,"nodeType":"243","messageId":"244","endLine":10,"endColumn":21},{"ruleId":"241","severity":1,"message":"311","line":15,"column":10,"nodeType":"243","messageId":"244","endLine":15,"endColumn":26},{"ruleId":"241","severity":1,"message":"255","line":27,"column":7,"nodeType":"243","messageId":"244","endLine":27,"endColumn":15},{"ruleId":"237","replacedBy":"312"},{"ruleId":"239","replacedBy":"313"},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"250","line":4,"column":3,"nodeType":"243","messageId":"244","endLine":4,"endColumn":7},{"ruleId":"241","severity":1,"message":"251","line":5,"column":3,"nodeType":"243","messageId":"244","endLine":5,"endColumn":16},{"ruleId":"241","severity":1,"message":"309","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":14},{"ruleId":"241","severity":1,"message":"249","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":8},{"ruleId":"241","severity":1,"message":"248","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":9},{"ruleId":"241","severity":1,"message":"314","line":26,"column":10,"nodeType":"243","messageId":"244","endLine":26,"endColumn":17},{"ruleId":"241","severity":1,"message":"255","line":36,"column":9,"nodeType":"243","messageId":"244","endLine":36,"endColumn":17},{"ruleId":"277","severity":1,"message":"315","line":90,"column":6,"nodeType":"279","endLine":90,"endColumn":8,"suggestions":"316"},{"ruleId":"277","severity":1,"message":"317","line":591,"column":6,"nodeType":"279","endLine":591,"endColumn":8,"suggestions":"318"},{"ruleId":"241","severity":1,"message":"257","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"246","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"250","line":7,"column":3,"nodeType":"243","messageId":"244","endLine":7,"endColumn":7},{"ruleId":"241","severity":1,"message":"251","line":8,"column":3,"nodeType":"243","messageId":"244","endLine":8,"endColumn":16},{"ruleId":"241","severity":1,"message":"258","line":9,"column":3,"nodeType":"243","messageId":"244","endLine":9,"endColumn":12},{"ruleId":"241","severity":1,"message":"309","line":10,"column":3,"nodeType":"243","messageId":"244","endLine":10,"endColumn":14},{"ruleId":"241","severity":1,"message":"249","line":11,"column":3,"nodeType":"243","messageId":"244","endLine":11,"endColumn":8},{"ruleId":"241","severity":1,"message":"248","line":12,"column":3,"nodeType":"243","messageId":"244","endLine":12,"endColumn":9},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"no-unused-vars","'getData' is defined but never used.","Identifier","unusedVar","'getFsData' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'OnDragEnd' is defined but never used.","'itineraryId' is assigned a value but never used.","'itinerary' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'handleAddCard' is assigned a value but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'addDayplan_Fs' is defined but never used.","'getCardTitle' is assigned a value but never used.",["319"],["320"],"'defaultID' is assigned a value but never used.","'source' is assigned a value but never used.",["319"],["320"],["319"],["320"],["319"],["320"],"'useDispatch' is defined but never used.","'setLogin' is assigned a value but never used.","'match' is assigned a value but never used.","'location' is assigned a value but never used.","'projectId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'plannedCards'. Either include it or remove the dependency array.","ArrayExpression",["321"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'handleDateChange'. Either include it or remove the dependency array.",["322"],"'ModeSelect' is assigned a value but never used.","'User' is defined but never used.",["319"],["320"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'handleAddProject', 'handleModifyProject', 'handleRemoveProject', and 'userId'. Either include them or remove the dependency array.",["323"],["319"],["320"],"'nanoid' is defined but never used.","'initCards' is defined but never used.","'projects' is assigned a value but never used.","'cards' is assigned a value but never used.","'unsubscribeToDayplan' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'handleAddCard', 'handleAddDayplan', 'handleAddMember', 'handleModifyCard', 'handleModifyDayplan', 'handleModifyMember', 'handleRemoveCard', 'handleRemoveDayplan', 'handleRemoveMember', and 'projectId'. Either include them or remove the dependency array.",["324"],"'wait' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","'useSelector' is defined but never used.","'editProjectTitle' is defined but never used.",["319"],["320"],"'current' is defined but never used.","React Hook useEffect has missing dependencies: 'cardId' and 'handleAddLink'. Either include them or remove the dependency array.",["325"],"React Hook useEffect has missing dependencies: 'cardId' and 'handleAdd'. Either include them or remove the dependency array.",["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [plannedCards]",{"range":"339","text":"340"},"Update the dependencies array to be: [handleDateChange, startDate]",{"range":"341","text":"342"},"Update the dependencies array to be: [handleAddProject, handleModifyProject, handleRemoveProject, userId]",{"range":"343","text":"344"},"Update the dependencies array to be: [dispatch, handleAddCard, handleAddDayplan, handleAddMember, handleModifyCard, handleModifyDayplan, handleModifyMember, handleRemoveCard, handleRemoveDayplan, handleRemoveMember, projectId]",{"range":"345","text":"346"},"Update the dependencies array to be: [cardId, handleAddLink]",{"range":"347","text":"348"},"Update the dependencies array to be: [cardId, handleAdd]",{"range":"349","text":"350"},[7093,7110],"[plannedCards]",[7457,7468],"[handleDateChange, startDate]",[1160,1162],"[handleAddProject, handleModifyProject, handleRemoveProject, userId]",[3166,3168],"[dispatch, handleAddCard, handleAddDayplan, handleAddMember, handleModifyCard, handleModifyDayplan, handleModifyMember, handleRemoveCard, handleRemoveDayplan, handleRemoveMember, projectId]",[1923,1925],"[cardId, handleAddLink]",[15006,15008],"[cardId, handleAdd]"]