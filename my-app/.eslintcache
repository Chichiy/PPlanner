[{"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/serviceWorker.js":"1","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itinerarySlice.js":"2","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/ItineraryBoard.jsx":"3","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/CardList.jsx":"4","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/Dayplans.jsx":"5","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/dayplanSlice.js":"6","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/firebase/Config.js":"7","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/cardSlice.js":"8","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/app/store.js":"9","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itineraryBoardLib.js":"10","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/Navbar.jsx":"11","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/App.jsx":"12","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/index.js":"13","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Home/Home.jsx":"14","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/userSlice.js":"15","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Projects.jsx":"16","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/projectsSlice.js":"17","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Project.jsx":"18","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/Expenditure/Expenditure.jsx":"19","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/CardBoard.jsx":"20","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/TodoList/TodoList.jsx":"21","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/component/Title.jsx":"22","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/SmallCard.jsx":"23","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/LargeCard.jsx":"24","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/membersSlice.js":"25","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/lib.js":"26","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/User.jsx":"27","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/Tags.jsx":"28"},{"size":4934,"mtime":1606275674064,"results":"29","hashOfConfig":"30"},{"size":601,"mtime":1607954762104,"results":"31","hashOfConfig":"30"},{"size":5645,"mtime":1608047797723,"results":"32","hashOfConfig":"30"},{"size":1823,"mtime":1608025994299,"results":"33","hashOfConfig":"30"},{"size":6952,"mtime":1608085380066,"results":"34","hashOfConfig":"30"},{"size":3578,"mtime":1607308456990,"results":"35","hashOfConfig":"30"},{"size":16256,"mtime":1608262143063,"results":"36","hashOfConfig":"30"},{"size":2484,"mtime":1608022983692,"results":"37","hashOfConfig":"30"},{"size":681,"mtime":1607532777624,"results":"38","hashOfConfig":"30"},{"size":2381,"mtime":1606805397461,"results":"39","hashOfConfig":"30"},{"size":10628,"mtime":1608257288508,"results":"40","hashOfConfig":"30"},{"size":2145,"mtime":1608220032001,"results":"41","hashOfConfig":"30"},{"size":621,"mtime":1607507551414,"results":"42","hashOfConfig":"30"},{"size":433,"mtime":1606889043646,"results":"43","hashOfConfig":"30"},{"size":1331,"mtime":1608226211450,"results":"44","hashOfConfig":"30"},{"size":6418,"mtime":1608225910495,"results":"45","hashOfConfig":"30"},{"size":1916,"mtime":1607261062734,"results":"46","hashOfConfig":"30"},{"size":5325,"mtime":1608015702113,"results":"47","hashOfConfig":"30"},{"size":264,"mtime":1606896002777,"results":"48","hashOfConfig":"30"},{"size":2955,"mtime":1608175884718,"results":"49","hashOfConfig":"30"},{"size":255,"mtime":1606903395627,"results":"50","hashOfConfig":"30"},{"size":1431,"mtime":1608137192175,"results":"51","hashOfConfig":"30"},{"size":5417,"mtime":1608109103353,"results":"52","hashOfConfig":"30"},{"size":23473,"mtime":1608137204694,"results":"53","hashOfConfig":"30"},{"size":1728,"mtime":1607532798909,"results":"54","hashOfConfig":"30"},{"size":2368,"mtime":1608140318009,"results":"55","hashOfConfig":"30"},{"size":6097,"mtime":1608262187898,"results":"56","hashOfConfig":"30"},{"size":6004,"mtime":1608173600619,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"19e0as4",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/serviceWorker.js",[],["132","133"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itinerarySlice.js",["134","135"],"import { createSlice } from \"@reduxjs/toolkit\"\nimport { getData, getFsData } from \"../../../../firebase/Config\"\n\nexport const itinerarySlice = createSlice({\n  name: \"itinerary\",\n  initialState: {},\n  reducers: {\n    initItinerary: (state, action) => {\n      for (let key in action.payload) {\n        state[key] = action.payload[key]\n      }\n    },\n    deleteDayplan: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const { initItinerary } = itinerarySlice.actions\n\nexport default itinerarySlice.reducer\n",["136","137"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/ItineraryBoard.jsx",["138","139","140","141","142","143","144","145","146","147"],"//tools\nimport React, { useState, useEffect } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\"\nimport { DragDropContext } from \"react-beautiful-dnd\"\n\n//components and scss\n\nimport CardList from \"./CardList\"\nimport Dayplans from \"./Dayplans\"\nimport styles from \"../../../../scss/itineraryBoard.module.scss\"\n\n//functions\nimport { OnDragEnd } from \"./itineraryBoardLib\"\nimport { updateCard_Fs } from \"../../../../firebase/Config\"\nimport { modifyCardProperties, updateCardsOrder } from \"../CardBoard/cardSlice\"\n\nconst ItineraryBoard = () => {\n  let { itineraryId, projectId } = useParams()\n\n  console.log(\"rerender!!!!!\")\n  //needed state\n  const itinerary = useSelector((state) => state.itinerary)\n  // const dayplans = useSelector((state) => state.dayplans)\n  const cards = useSelector((state) => state.cards)\n\n  const [filterMethod] = useState(\"status\")\n\n  const filterCards = (filterMethod) => {\n    switch (filterMethod) {\n      case \"noPlan\": {\n        return cards.filter((card) => card.status === 0)\n      }\n\n      case \"withPlan\": {\n        return cards.filter((card) => card.status === 1)\n      }\n\n      case \"noFilter\": {\n        return cards\n      }\n\n      default: {\n        return cards\n      }\n    }\n  }\n\n  // //register needed dispatch\n  const dispatch = useDispatch()\n\n  const handleOnDragEnd = (result) => {\n    console.log(result)\n    // OnDragEnd(dispatch, result, itinerary, filterCards)\n\n    //define type\n    let type\n    let sou = result.source.droppableId\n    let des = result.destination.droppableId\n\n    if (sou === \"cardsList\" && des === \"cardsList\") {\n      type = \"reorderCards\"\n    }\n    if (sou === \"cardsList\" && des !== \"cardsList\") {\n      type = \"addAppointment\"\n    }\n    if (sou === \"appointments\" && des !== \"cardsList\") {\n      type = \"rescheduleAppointment\"\n    }\n    if (sou === \"appointments\" && des === \"cardsList\") {\n      type = \"removeAppointment\"\n    }\n\n    switch (type) {\n      case \"reorderCards\": {\n        let destinationId = filterCards(\"noPlan\")[result.destination.index].id\n        let updateAction = updateCardsOrder({\n          type: \"cardsList\",\n          result: result,\n          destinationId: destinationId,\n        })\n        dispatch(updateAction)\n        break\n      }\n\n      case \"rescheduleAppointment\": {\n        //get target item\n        let targetCardId = result.draggableId\n        let target = cards.find((card) => card.id === targetCardId)\n\n        //get original data\n        let startTime = new Date(target.start_time)\n        let endTime = new Date(target.end_time)\n        let timeSpan = endTime.getTime() - startTime.getTime()\n\n        //get new data\n        let newStartTime = new Date()\n        newStartTime.setTime(result.destination.droppableId)\n        let newEndTime = new Date()\n        newEndTime.setTime(newStartTime.getTime() + timeSpan)\n\n        //check if change\n        if (\n          startTime.getTime() === newStartTime.getTime() &&\n          endTime.getTime() === newEndTime.getTime()\n        ) {\n          break\n        }\n\n        //prepare changes\n        let change = {\n          start_time: newStartTime,\n          end_time: newEndTime,\n        }\n        let convertedChange = {\n          start_time: newStartTime.toString(),\n          end_time: newEndTime.toString(),\n        }\n\n        //update locally first\n        dispatch(\n          modifyCardProperties({ change: convertedChange, id: targetCardId })\n        )\n        //update to cloud database\n        updateCard_Fs(projectId, targetCardId, change)\n        break\n      }\n\n      case \"addAppointment\": {\n        //get target item\n        let targetCardId = result.draggableId\n\n        //get new data\n        let newStartTime = new Date()\n        newStartTime.setTime(result.destination.droppableId)\n        let newEndTime = new Date()\n        newEndTime.setTime(newStartTime.getTime() + 60 * 60 * 1000)\n\n        //prepare changes\n        let change = {\n          status: 1,\n          start_time: newStartTime,\n          end_time: newEndTime,\n        }\n        let convertedChange = {\n          status: 1,\n          start_time: newStartTime.toString(),\n          end_time: newEndTime.toString(),\n        }\n\n        //update locally first\n        dispatch(\n          modifyCardProperties({ change: convertedChange, id: targetCardId })\n        )\n        //update to cloud database\n        updateCard_Fs(projectId, targetCardId, change)\n\n        break\n      }\n\n      case \"removeAppointment\": {\n        //get target item\n        let targetCardId = result.draggableId\n\n        //prepare changes\n        let change = {\n          status: 0,\n          start_time: null,\n          end_time: null,\n        }\n        let convertedChange = {\n          status: 0,\n          start_time: null,\n          end_time: null,\n        }\n\n        //update locally first\n        dispatch(\n          modifyCardProperties({ change: convertedChange, id: targetCardId })\n        )\n        //update to cloud database\n        updateCard_Fs(projectId, targetCardId, change)\n\n        break\n      }\n\n      default: {\n        console.log(\"something wrong when drag and drop\")\n        break\n      }\n    }\n  }\n\n  // const handleOnDragStart = (result) => {\n  //   console.log(result)\n  // }\n\n  return (\n    <div className={styles.view}>\n      <DragDropContext\n        // onDragStart={handleOnDragStart}\n        onDragEnd={handleOnDragEnd}\n      >\n        <CardList cards={filterCards(\"noPlan\")} />\n        <Dayplans />\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default ItineraryBoard\n",["148","149"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/CardList.jsx",["150"],"//tools\nimport React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { nanoid } from \"nanoid\"\nimport { Draggable, Droppable } from \"react-beautiful-dnd\"\n\n//components and scss\nimport styles from \"../../../../scss/itineraryBoard.module.scss\"\n\n//functions\nimport { addCard } from \"../CardBoard/cardSlice\"\nimport { colorCode } from \"../../../lib\"\n\nconst CardList = (props) => {\n  //dispatch\n  const dispatch = useDispatch()\n\n  const handleAddCard = (e) => {\n    if (e.target.id === \"cardList\") {\n      let card = {\n        title: \"test\" + nanoid(3),\n        id: nanoid(),\n        status: 0,\n      }\n      dispatch(addCard(card))\n    }\n  }\n\n  return (\n    <Droppable droppableId={\"cardsList\"}>\n      {(provided) => (\n        <div\n          id=\"cardList\"\n          className={styles.cardList}\n          // onClick={handleAddCard}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          {props.cards.map((card, index) => {\n            return (\n              <Draggable key={card.id} draggableId={card.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                    id={card.id}\n                    className={styles.card}\n                  >\n                    <div\n                      className={styles.category}\n                      style={{ backgroundColor: colorCode[card.category] }}\n                    ></div>\n                    <div className={styles.title}>{card.title}</div>\n                  </div>\n                )}\n              </Draggable>\n            )\n          })}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  )\n}\n\nexport default CardList\n",["151","152"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/Dayplans.jsx",["153","154","155","156","157","158","159","160","161","162"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/dayplanSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/firebase/Config.js",["163","164","165","166"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/cardSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/app/store.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/itineraryBoard/itineraryBoardLib.js",[],["167","168"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/Navbar.jsx",["169","170","171","172","173","174","175","176","177","178","179","180"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/App.jsx",["181","182","183","184"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/index.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Home/Home.jsx",["185","186"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport styles from \"./home.module.scss\"\n\nconst Home = () => {\n  return (\n    <div className={styles.view}>\n      <div className={styles.banner}>\n        現在開始規劃旅行吧！\n        <br />\n        <Link to=\"/projects\" className={styles.button_border}>\n          GO\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n",["187","188"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/userSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Projects.jsx",["189","190","191","192","193","194","195","196"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/projectsSlice.js",["197","198"],"import { createSlice } from \"@reduxjs/toolkit\"\nimport { getData, getFsData } from \"../../firebase/Config\"\n\nexport const projectsSlice = createSlice({\n  name: \"projects\",\n  initialState: [],\n  reducers: {\n    addProjects: (state, action) => {\n      let target = action.payload\n\n      //prevent repeatly adding\n      if (state.findIndex((project) => project.id === target.id) < 0) {\n        state.push(target)\n      }\n    },\n    removeProjects: (state, action) => {\n      let target = action.payload\n      let index = state.findIndex((project) => project.id === target.id)\n      state.splice(index, 1)\n    },\n    modifyProjects: (state, action) => {\n      let target = action.payload\n      let index = state.findIndex((project) => project.id === target.id)\n      state.splice(index, 1, target)\n    },\n\n    editProjectTitle: (state, action) => {\n      let target = state.find(\n        (project) => project.id === action.payload.projectId\n      )\n      target.title = action.payload.newTitle\n    },\n  },\n})\n\nexport const {\n  addProjects,\n  removeProjects,\n  modifyProjects,\n  editProjectTitle,\n} = projectsSlice.actions\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount))\n//   }, 1000)\n// }\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.projects.value)`\n// export const selectCount = (state) => state.projects.value\n\nexport default projectsSlice.reducer\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/Project.jsx",["199","200","201","202","203","204","205","206","207","208","209","210"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/Expenditure/Expenditure.jsx",["211","212"],"import React, { useState, useEffect } from \"react\"\n\n// import styles from \"../../../scss/cardBoard.module.scss\"\n\nconst Expenditure = () => {\n  return (\n    <div>\n      <br />\n      <br />\n      <br />\n      Expenditure\n    </div>\n  )\n}\n\nexport default Expenditure\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/CardBoard.jsx",["213","214","215","216","217"],"import React, { useState, useEffect } from \"react\"\nimport {\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport styles from \"./cardBoard.module.scss\"\n\nimport { SmallCard, AddCard } from \"./component/SmallCard\"\nimport LargeCard from \"./component/LargeCard\"\n\nimport { AddCard_Fs } from \"../../../../firebase/Config\"\nimport { wait } from \"@testing-library/react\"\n\nconst CardBoard = () => {\n  // console.log(\"re-cardBoard\")\n\n  const cards = useSelector((state) => state.cards)\n  const { projectId } = useParams()\n  const project = useSelector((state) =>\n    state.projects.find((project) => project.id === projectId)\n  )\n  const match = useRouteMatch()\n\n  //////filter cards//////\n\n  //get searched tags from URL\n  const useQuery = () => {\n    let tagString = new URLSearchParams(useLocation().search).get(\"tag\")\n    return tagString ? tagString.split(\" \") : null\n  }\n  let searchTags = useQuery()\n\n  const findTagId = (tagName) => {\n    try {\n      return project.tags.find((tag) => tag.name === tagName).id\n    } catch {\n      return null\n    }\n  }\n\n  const filteredCard = () => {\n    return searchTags\n      ? cards.filter((card) => {\n          for (let i = 0; i < searchTags.length; i++) {\n            if (card.tags.includes(findTagId(searchTags[i]))) {\n              return true\n            }\n          }\n        })\n      : cards\n  }\n\n  //////add new card//////\n  const emptyCard = {\n    title: \"\",\n    description: \"\",\n    category: \"default\",\n    tags: [],\n    status: 0,\n    cover_pic: \"https://fakeimg.pl/65x65/\",\n  }\n\n  const [addCard, toggleAddCard] = useState(false)\n  const [pendingInfo, setPendingInfo] = useState(emptyCard)\n  const dispatch = useDispatch()\n\n  const handleAddCard = (e) => {\n    let triggerElementId = [\"cardBoardContainer\"]\n    if (triggerElementId.includes(e.target.id)) {\n      let shouldAddCard = !(\n        JSON.stringify(pendingInfo) === JSON.stringify(emptyCard)\n      )\n\n      switch (shouldAddCard) {\n        case true: {\n          AddCard_Fs(projectId, pendingInfo)\n\n          toggleAddCard(!addCard)\n          setPendingInfo(emptyCard)\n\n          break\n        }\n\n        default: {\n          // toggleAddCard(!addCard)\n          toggleAddCard(!addCard)\n          break\n        }\n      }\n    }\n  }\n\n  return (\n    <div\n      id=\"cardBoardContainer\"\n      className={styles.container}\n      onDoubleClick={handleAddCard}\n    >\n      {filteredCard().map((card) => {\n        return (\n          <Link to={`${match.url}/${card.id}`} key={card.id}>\n            <SmallCard card={card} />\n          </Link>\n        )\n      })}\n      {addCard ? (\n        <AddCard pendingInfo={pendingInfo} setPendingInfo={setPendingInfo} />\n      ) : null}\n      <Switch>\n        <Route path={`${match.path}/:cardId`}>\n          <LargeCard />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default CardBoard\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/TodoList/TodoList.jsx",["218","219"],"import React, { useState, useEffect } from \"react\"\n\n// import styles from \"../../../scss/cardBoard.module.scss\"\n\nconst TodoList = () => {\n  return (\n    <div>\n      <br />\n      <br />\n      <br />\n      todoList\n    </div>\n  )\n}\n\nexport default TodoList\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Navbar/component/Title.jsx",["220","221","222","223","224","225","226","227","228"],"import React, { useState, useEffect } from \"react\"\nimport {\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n} from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport styles from \"../navbar.module.scss\"\n\nimport { updateProject_Fs } from \"../../../firebase/Config\"\nimport { editProjectTitle } from \"../../Project/projectsSlice\"\n\nconst Title = ({ projectId, title }) => {\n  let projectTitle = title ? title : null\n  let [isEditing, setEditing] = useState(false)\n  let [pending, setPending] = useState(\"\")\n\n  //update pending\n  useEffect(() => {\n    setPending(projectTitle)\n  }, [projectTitle])\n\n  let dispatch = useDispatch()\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      //update cloud data\n      let change = {\n        title: e.target.value,\n      }\n      updateProject_Fs(projectId, change)\n\n      setEditing(!isEditing)\n    }\n  }\n\n  if (!isEditing) {\n    return (\n      <div\n        className={styles.item}\n        onClick={() => {\n          setEditing(!isEditing)\n        }}\n      >\n        {projectTitle}\n      </div>\n    )\n  } else {\n    return (\n      <input\n        type=\"text\"\n        className={styles.editTitle}\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n        autoFocus\n      />\n    )\n  }\n}\n\nexport default Title\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/SmallCard.jsx",["229"],"import React, { useState, useEffect } from \"react\"\n\nimport styles from \"../cardBoard.module.scss\"\n\nconst fakeImg = \"https://fakeimg.pl/65x65/\"\n\nexport const SmallCard = ({ card }) => {\n  return (\n    <div id={card.id} className={styles.card_small}>\n      <div className={styles[`tag_${card.category}`]}></div>\n      <div className={styles.info}>\n        <div className={styles.card_small_picture}>\n          <img src={card.cover_pic} alt=\"pic\" />\n        </div>\n        <div className={styles.details}>\n          <div className={styles.title}>{card.title}</div>\n          <div className={styles.description}>{card.description}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const AddCard = ({ pendingInfo, setPendingInfo, shouldAddCard }) => {\n  //new card data\n  // const emptyCard = {\n  //   title: \"\",\n  //   description: \"\",\n  //   category: \"default\",\n  // }\n\n  // const [pendingInfo, setPendingInfo] = useState(emptyCard)\n\n  // useEffect(() => {\n  //   return () => {\n  //     console.log(\"unmount\")\n  //   }\n  // })\n\n  // console.log(pendingInfo !== emptyCard)\n  // pendingInfo, setPendingInfo, shouldAddCard\n  //detemine should add card or not\n  // if (pendingInfo !== emptyCard) {\n  //   shouldAddCard(true)\n  // }\n\n  //category related\n  const [selectCategory, setCategory] = useState(false)\n  const toggleCategorySelect = (e) => {\n    if (e.target.id === \"pendingCategory\") {\n      setCategory(!selectCategory)\n    }\n  }\n  const updateCategory = (e) => {\n    setPendingInfo({\n      ...pendingInfo,\n      category: e.target.value,\n    })\n    setCategory(!selectCategory)\n  }\n\n  const updateTitle = (input) => {\n    setPendingInfo({ ...pendingInfo, title: input })\n  }\n\n  const updateDescription = (input) => {\n    setPendingInfo({ ...pendingInfo, description: input })\n  }\n\n  return (\n    <div className={styles.card_small}>\n      <div\n        id=\"pendingCategory\"\n        className={styles[`tag_${pendingInfo.category}`]}\n        onClick={toggleCategorySelect}\n      >\n        {selectCategory ? (\n          <SelectCategory handleSelectCategory={updateCategory} />\n        ) : null}\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.card_small_picture}>\n          <img src={fakeImg} alt=\"pic\" />\n        </div>\n        <div className={styles.details}>\n          <PendingTitle\n            pendingTitle={pendingInfo.title}\n            handleTitleUpdate={updateTitle}\n          />\n\n          <PendingDescription\n            pendingDescription={pendingInfo.description}\n            handleDescriptionUpdate={updateDescription}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n////////////Title////////////\n\nconst PendingTitle = (props) => {\n  const [isEditing, setEditing] = useState(true)\n  const [pending, setPending] = useState(\"\")\n\n  let { pendingTitle, handleTitleUpdate } = props\n\n  const toggleInputTitle = (e) => {\n    if (e.target.id === \"pendingTitle\") {\n      setEditing(!isEditing)\n    }\n  }\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      if (e.target.value) {\n        setEditing(!isEditing)\n        handleTitleUpdate(e.target.value)\n      } else {\n        handleTitleUpdate(\"\")\n      }\n    }\n  }\n\n  if (isEditing) {\n    return (\n      <input\n        type=\"text\"\n        className={styles.inputTitle}\n        placeholder=\"編輯標題\"\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n        autoFocus\n      />\n    )\n  } else {\n    return (\n      <div\n        id=\"pendingTitle\"\n        className={styles.title}\n        onClick={toggleInputTitle}\n      >\n        {pendingTitle}\n      </div>\n    )\n  }\n}\n\n////////////Description////////////\n\nconst PendingDescription = (props) => {\n  const [isEditing, setEditing] = useState(true)\n  const [pending, setPending] = useState(\"\")\n\n  let { pendingDescription, handleDescriptionUpdate } = props\n\n  const toggleInputDescription = (e) => {\n    if (e.target.id === \"pendingDescription\") {\n      setEditing(!isEditing)\n    }\n  }\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      if (e.target.value) {\n        setEditing(!isEditing)\n        handleDescriptionUpdate(e.target.value)\n      } else {\n        handleDescriptionUpdate(\"\")\n      }\n    }\n  }\n\n  if (isEditing) {\n    return (\n      <textarea\n        type=\"text\"\n        className={styles.inputDescription}\n        placeholder=\"編輯描述\"\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n      />\n    )\n  } else {\n    return (\n      <div\n        id=\"pendingDescription\"\n        className={styles.description}\n        onClick={toggleInputDescription}\n      >\n        {pendingDescription}\n      </div>\n    )\n  }\n}\n\n////////////Category////////////\n\nconst SelectCategory = (props) => {\n  const categories = [\"food\", \"hotel\", \"country\", \"site\", \"commute\", \"default\"]\n  let handleSelectCategory = props.handleSelectCategory\n\n  return (\n    <div className={styles.selectCategory}>\n      {categories.map((category) => {\n        return (\n          <option\n            value={category}\n            className={styles[`category_${category}`]}\n            onClick={handleSelectCategory}\n          >\n            {category}\n          </option>\n        )\n      })}\n    </div>\n  )\n}\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/LargeCard.jsx",["230","231","232","233","234","235","236","237","238","239"],"import React, { useState, useRef, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\"\n\nimport styles from \"./largeCard.module.scss\"\n\nimport {\n  updateCard_Fs,\n  listenToComments,\n  listenToLinks,\n  addComment_Fs,\n  updateComment_Fs,\n  removeComment_Fs,\n  addLink_Fs,\n  updateLink_Fs,\n  removeLink_Fs,\n} from \"../../../../../firebase/Config\"\nimport { nanoid } from \"@reduxjs/toolkit\"\n\nimport Tags, { AddTag } from \"./Tags\"\n\n//DatesPicker\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getTime, getColor, resetTime, colorCode } from \"../../../../lib\"\n\nconst LargeCard = () => {\n  const { projectId, cardId } = useParams()\n  const card = useSelector((state) =>\n    state.cards.find((card) => card.id === cardId)\n  )\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  //////updates//////\n  const updateTitle = (input) => {\n    let change = {\n      title: input,\n    }\n    updateCard_Fs(projectId, cardId, change)\n  }\n\n  const updateDescription = (input) => {\n    let change = {\n      description: input,\n    }\n    updateCard_Fs(projectId, cardId, change)\n  }\n\n  //handle close\n  const close = (e) => {\n    let triggerElementId = [\"closeBtn\", \"largeCardBackground\"]\n\n    // close floating menu if onblur\n    if (isfloating && e.target.ariaLabel !== isfloating.type) {\n      //prevent close on react-datepicker\n      if (\n        e.target.className.slice(0, 5) === \"react\" ||\n        e.target.getAttribute(\"aria-labelledBy\") === \"addTime\"\n      ) {\n        return\n      }\n\n      setFloat(false)\n      //close card if click on click btn\n      if (e.target.id === \"closeBtn\") {\n        history.goBack()\n      }\n      return\n    }\n\n    //close card\n    if (triggerElementId.includes(e.target.id)) {\n      history.goBack()\n      return\n    }\n  }\n\n  //float menu\n  const [isfloating, setFloat] = useState(false)\n  const sideBar_addLink = useRef(null)\n  const sideBar_addTime = useRef(null)\n\n  const handleFloatMenu = (type, ref) => {\n    if (!isfloating) {\n      let float = {\n        type: type,\n        position: ref.current.getBoundingClientRect(),\n      }\n      setFloat(float)\n    } else {\n      setFloat(false)\n    }\n  }\n\n  //links\n  const [links, setLinks] = useState([])\n  useEffect(() => {\n    let unsubscribe = listenToLinks(\n      cardId,\n      handleAddLink,\n      handleModifyLink,\n      handleRemoveLink\n    )\n\n    return unsubscribe\n  }, [])\n\n  const handleAddLink = (res) => {\n    if (links.findIndex((link) => link.id === res.id) < 0) {\n      setLinks((prev) => [...prev, res])\n    }\n  }\n\n  const handleModifyLink = (res) => {\n    setLinks((prev) =>\n      prev.map((link) => {\n        return link.id === res.id ? res : link\n      })\n    )\n  }\n\n  const handleRemoveLink = (res, source) => {\n    setLinks((prev) => prev.filter((link) => link.id !== res.id))\n  }\n\n  try {\n    return (\n      <div\n        id=\"largeCardBackground\"\n        className={styles.card_large_background}\n        onClick={close}\n      >\n        <div className={styles.card_large}>\n          {/* header */}\n          <div className={styles.card_header}>\n            <div className={styles.tag_icon}></div>\n            <Title title={card.title} handleUpdateTitle={updateTitle} />\n            <div id=\"closeBtn\" className={styles.card_close}>\n              X\n            </div>\n          </div>\n\n          {/* main */}\n          <div className={styles.card_main}>\n            {/* tag section */}\n            <Tags\n              card={card}\n              projectId={projectId}\n              isfloating={isfloating}\n              setFloat={setFloat}\n            />\n\n            {/* discription section */}\n            <Description\n              description={card.description}\n              handleUpdateDescription={updateDescription}\n            />\n            {links.length > 0 && (\n              <Links\n                links={links}\n                isfloating={isfloating}\n                setFloat={setFloat}\n              />\n            )}\n\n            {/* comments section */}\n            <Comments cardId={cardId} projectId={projectId} />\n          </div>\n\n          {/* side bar */}\n          <div className={styles.card_sideBar}>\n            <div className={styles.title}>新增至卡片</div>\n            <div className={styles.button_sideBar}>待辦事項</div>\n            {card.links ? null : (\n              <div\n                aria-label=\"addLink\"\n                ref={sideBar_addLink}\n                className={styles.button_sideBar}\n                onClick={() => {\n                  handleFloatMenu(\"addLink\", sideBar_addLink)\n                }}\n              >\n                附件\n              </div>\n            )}\n            <div className={styles.button_sideBar}>預估花費</div>\n            <div\n              aria-label=\"addTime\"\n              ref={sideBar_addTime}\n              className={styles.button_sideBar}\n              onClick={() => {\n                handleFloatMenu(\"addTime\", sideBar_addTime)\n              }}\n            >\n              安排時間\n            </div>\n          </div>\n\n          {/* float menu */}\n          <FloatMenu\n            card={card}\n            cardId={cardId}\n            isfloating={isfloating}\n            setFloat={setFloat}\n          />\n        </div>\n      </div>\n    )\n  } catch {\n    return null\n  }\n}\nexport default LargeCard\n\n////////////floating menu////////////\nconst FloatMenu = ({ card, cardId, isfloating, setFloat }) => {\n  switch (isfloating.type) {\n    case \"addLink\": {\n      return (\n        <AddLink isfloating={isfloating} setFloat={setFloat} cardId={cardId} />\n      )\n    }\n\n    case \"addTime\": {\n      return <AddTime card={card} isfloating={isfloating} setFloat={setFloat} />\n    }\n\n    case \"addTag\": {\n      return <AddTag card={card} isfloating={isfloating} setFloat={setFloat} />\n    }\n    default: {\n      return null\n    }\n  }\n}\n\nconst AddTime = ({ card, isfloating, setFloat }) => {\n  const { projectId, cardId } = useParams()\n\n  //input time holder\n  const [startDate, setStartDate] = useState(resetTime(new Date()))\n  const [endDate, setEndDate] = useState(resetTime(new Date()))\n\n  useEffect(() => {\n    //update time to the latest value\n    try {\n      if (card.start_time && card.end_time) {\n        setStartDate(new Date(card.start_time))\n        setEndDate(new Date(card.end_time))\n      }\n    } catch {}\n  }, [])\n\n  const handleAddTime = () => {\n    if (\n      //check is input valid\n      endDate - startDate < 0 ||\n      endDate - startDate > 24 * 60 * 60 * 1000 ||\n      endDate.getDate() !== startDate.getDate()\n    ) {\n      alert(\"日期格式有誤，目前僅接受在同一天開始與結束的時間\")\n    } else {\n      //update to cloud database\n      let change = {\n        status: 1,\n        start_time: startDate,\n        end_time: endDate,\n      }\n      updateCard_Fs(projectId, cardId, change)\n    }\n  }\n\n  return (\n    <div\n      aria-label=\"addTime\"\n      className={styles.addTime_container}\n      style={{\n        position: \"fixed\",\n        width: `${isfloating.position.width}px`,\n        left: `${isfloating.position.x}px`,\n        top: `${isfloating.position.y + 40}px`,\n      }}\n    >\n      <div aria-label=\"addTime\" className={styles.addLink_span}>\n        開始時間\n      </div>\n      <DaySelect date={startDate} setDate={setStartDate} />\n      <div aria-label=\"addTime\" className={styles.addLink_span}>\n        結束時間\n      </div>\n      <DaySelect date={endDate} setDate={setEndDate} />\n      <div\n        aria-label=\"addTime\"\n        className={styles.addLink_button}\n        onClick={handleAddTime}\n      >\n        儲存\n      </div>\n    </div>\n  )\n}\n\nconst DaySelect = ({ date, setDate }) => {\n  //show dates with plans\n  const plannedCards = useSelector((state) => state.cards).filter(\n    (card) => card.status === 1\n  )\n\n  const getDate = (type, string) => {\n    switch (type) {\n      case \"dateObj\": {\n        let time = new Date(string)\n        return time\n      }\n\n      case \"date\": {\n        let time = new Date(string)\n        return time.getDate()\n      }\n      case \"month\": {\n        let time = new Date(string)\n        return time.getMonth()\n      }\n      case \"year\": {\n        let time = new Date(string)\n        return time.getFullYear()\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  const hasPlan = (date) => {\n    if (\n      plannedCards.findIndex(\n        (card) =>\n          getDate(\"dateObj\", card.start_time) - date < 24 * 60 * 60 * 1000 &&\n          getDate(\"dateObj\", card.start_time) - date > 0\n      ) > -1\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <DatePicker\n      ariaLabelledBy=\"addTime\"\n      selected={date}\n      onChange={(date) => setDate(date)}\n      className={styles.input}\n      showTimeSelect\n      dateFormat=\"Pp\"\n      popperClassName={styles.popper}\n      popperModifiers={{\n        offset: {\n          enabled: true,\n          offset: \"-10px, -5px\",\n        },\n        preventOverflow: {\n          enabled: true,\n          escapeWithReference: true,\n          boundariesElement: \"viewport\",\n        },\n      }}\n      wrapperClassName={styles.react_datepicker_wrapper}\n      dayClassName={(date) => (hasPlan(date) ? styles.hasPlan : undefined)}\n    />\n  )\n}\n\nconst AddLink = ({ isfloating, setFloat, cardId }) => {\n  //input link holder\n  const [url, setUrl] = useState(\"\")\n  // const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e) => {\n    // setLoading(true)\n    setFloat(false)\n    const cors = \"https://cors-anywhere.herokuapp.com/\"\n    // const url = \"https://andy6804tw.github.io/2019/09/21/fix-cors-problem/\"\n\n    const res = await fetch(cors + url)\n    const data = await res.text()\n\n    var parser = new DOMParser()\n    var doc = parser.parseFromString(data, \"text/html\")\n    let title = doc.querySelector(\"title\").textContent\n    let img = doc.querySelector(\"body\").querySelector(\"img\")\n\n    //// img converter ////\n    // get src\n    img = img ? img.src : \"\"\n\n    //update domain if using relative path\n    let myOrigin = window.location.origin\n    if (img.slice(0, myOrigin.length) === myOrigin) {\n      let correctOrigin = new URL(url).origin\n      let correctImgPath = correctOrigin + img.slice(origin.length)\n      img = correctImgPath\n    }\n\n    let pending = {\n      card_id: cardId,\n      url: url,\n      title: title,\n      img: img,\n      date: new Date(),\n    }\n\n    ///update fiebase\n    addLink_Fs(pending)\n    // setLoading(false)\n    setUrl(\"\")\n  }\n\n  return (\n    <div\n      aria-label=\"addLink\"\n      className={styles.addLink_container}\n      style={{\n        position: \"fixed\",\n        left: `${isfloating.position.x}px`,\n        top: `${isfloating.position.y + 40}px`,\n      }}\n    >\n      <div aria-label=\"addLink\" className={styles.addLink_span}>\n        附加連結\n      </div>\n      <input\n        aria-label=\"addLink\"\n        type=\"text\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n        placeholder=\"請貼上連結\"\n        className={styles.addLink_input}\n        autoFocus\n      />\n      <div\n        aria-label=\"addLink\"\n        className={styles.addLink_button}\n        onClick={url ? handleSubmit : null}\n      >\n        附加\n      </div>\n    </div>\n  )\n}\n\n////////////Title////////////\n\nconst Title = ({ title, handleUpdateTitle }) => {\n  const [isEditing, setEditing] = useState(false)\n  const [pending, setPending] = useState(title)\n\n  const handleTitleEdit = (e) => {\n    if (e.type === \"blur\" || e.key === \"Enter\") {\n      if (e.target.value) {\n        setEditing(!isEditing)\n        handleUpdateTitle(e.target.value)\n      } else {\n        alert(\"請輸入卡片標題\")\n      }\n    }\n  }\n\n  if (isEditing) {\n    return (\n      <input\n        type=\"text\"\n        className={styles.inputTitle}\n        value={pending}\n        onChange={(e) => setPending(e.target.value)}\n        onBlur={handleTitleEdit}\n        onKeyPress={handleTitleEdit}\n        autoFocus\n      />\n    )\n  } else {\n    return (\n      <div\n        id=\"largeCardTitle\"\n        className={styles.card_title}\n        onClick={() => setEditing(!isEditing)}\n      >\n        {title}\n      </div>\n    )\n  }\n}\n\n////////////Description////////////\n\nconst Description = ({ description, handleUpdateDescription }) => {\n  const [isEditing, setEditing] = useState(false)\n  const [pending, setPending] = useState(description)\n\n  const handleSave = (e) => {\n    handleUpdateDescription(pending ? pending : \"\")\n    setEditing(!isEditing)\n  }\n\n  const textAreaRef = useRef(0)\n  const handleEdit = (e) => {\n    try {\n      // console.log(e)\n      setPending(e.target.value)\n\n      //auto-grow textarea\n      let height = parseInt(getComputedStyle(e.target).height.slice(0, -2))\n      let lineHeight = parseInt(\n        getComputedStyle(e.target).lineHeight.slice(0, -2)\n      )\n      let padding = parseInt(getComputedStyle(e.target).padding.slice(0, -2))\n\n      if (e.target.scrollHeight > height) {\n        textAreaRef.current.style.height = `${\n          e.target.scrollHeight + padding * 2\n        }px`\n      } else {\n        while (height >= e.target.scrollHeight && e.target.scrollHeight >= 54) {\n          textAreaRef.current.style.height = `${height - lineHeight}px`\n          height -= lineHeight\n        }\n        textAreaRef.current.style.height = `${height + lineHeight}px`\n      }\n    } catch {\n      console.error()\n    }\n  }\n\n  return (\n    <div className={styles.description_section}>\n      <div className={styles.controll_bar}>\n        <div className={styles.title}>描述</div>\n\n        {/* edit/save btn */}\n        {isEditing ? (\n          <div className={styles.save_button} onClick={handleSave}>\n            儲存\n          </div>\n        ) : (\n          <div\n            className={styles.edit_button}\n            onClick={() => setEditing(!isEditing)}\n          >\n            編輯\n          </div>\n        )}\n      </div>\n\n      <div className={styles.container}>\n        {/* textarea/display section */}\n        {isEditing ? (\n          <textarea\n            ref={textAreaRef}\n            type=\"text\"\n            className={styles.inputDescription}\n            value={pending}\n            onChange={handleEdit}\n            // onFocus={handleEdit}\n            onBlur={handleSave}\n            autoFocus\n            // onBlur={handleEdit}\n            // onKeyPress={handleEdit}\n          />\n        ) : (\n          <pre className={styles.description}>{description}</pre>\n        )}\n      </div>\n    </div>\n  )\n}\n\n////////////Links////////////\n\nconst Links = ({ links, isfloating, setFloat }) => {\n  const toggleAddLinkBtnRef = useRef(1)\n\n  const toggleAddLinkBtn = (e) => {\n    if (isfloating.type === \"addLink\") {\n      setFloat(false)\n    } else {\n      let float = {\n        type: \"addLink\",\n        position: toggleAddLinkBtnRef.current.getBoundingClientRect(),\n      }\n\n      setFloat(float)\n    }\n  }\n\n  return (\n    <div className={styles.link_section}>\n      <div className={styles.title}>附件</div>\n      <div className={styles.container}>\n        {/* {loading && <h3>Fetching link previews... 🤔🤔🤔</h3>} */}\n        {links.map((data) => (\n          <LinkItem key={data.url} data={data} />\n        ))}\n\n        <div\n          className={styles.toggleAddLinkBtn}\n          onClick={toggleAddLinkBtn}\n          ref={toggleAddLinkBtnRef}\n        >\n          增加附件\n        </div>\n        {/* {isfloating.type === \"addLink\" && (\n          <AddLink\n            url={url}\n            setUrl={setUrl}\n            handleSubmit={handleSubmit}\n            isfloating={isfloating}\n          />\n        )} */}\n      </div>\n      {/* textarea/display section */}\n      {/* {isEditing ? (\n          <textarea\n            ref={textAreaRef}\n            type=\"text\"\n            className={styles.inputDescription}\n            value={pending}\n            onChange={handleEdit}\n            // onFocus={handleEdit}\n            onBlur={handleSave}\n            autoFocus\n            // onBlur={handleEdit}\n            // onKeyPress={handleEdit}\n          />\n        ) : (\n          <pre className={styles.description}>{description}</pre>\n        )}\n      </div> */}\n    </div>\n  )\n}\n\nconst LinkItem = ({ data }) => {\n  const title = useRef(0)\n\n  const getTitle = () => {\n    //slice the title more precisely, but only works when re-render\n    // if (title.current.scrollHeight > title.current.clientHeight) {\n    //   while (title.current.scrollHeight > title.current.clientHeight) {\n    //     title.current.textContent = title.current.textContent.slice(0, -1)\n    //   }\n    //   title.current.textContent = title.current.textContent.slice(0, -3) + \"...\"\n    //   return title.current.textContent\n    // }\n\n    // for the first render, slice with rough length\n    if (data.title.length > 43) {\n      return data.title.slice(0, 43) + \"...\"\n    } else {\n      return data.title\n    }\n  }\n\n  const [isEditing, setEditing] = useState(false)\n  const [pending, setPending] = useState(data.title)\n\n  const handleEditTitle = (e) => {\n    if ((e.target.ariaLabel = \"editBtn\")) {\n      if (isEditing && data.title !== pending) {\n        updateLink(pending)\n        setEditing(!isEditing)\n      } else {\n        setEditing(!isEditing)\n      }\n    }\n  }\n\n  const updateLink = (input) => {\n    let change = {\n      title: input,\n    }\n    updateLink_Fs(data.id, change)\n  }\n\n  const removeLink = (e) => {\n    if ((e.target.ariaLabel = \"removeBtn\")) {\n      let yes = window.confirm(\"你確定要刪除這個附件嗎？\")\n\n      if (yes) {\n        removeLink_Fs(data.id)\n      }\n    }\n  }\n\n  return (\n    <div className={styles.link_container}>\n      <a\n        className={styles.preview_img}\n        href={data.url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <img src={data.img} alt=\"link's thumbnail\" />\n      </a>\n      <div className={styles.info}>\n        {isEditing ? (\n          <textarea\n            className={styles.message}\n            value={pending}\n            onChange={(e) => setPending(e.target.value)}\n            autoFocus\n          />\n        ) : (\n          <a\n            className={styles.title}\n            ref={title}\n            href={data.url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {getTitle()}\n          </a>\n        )}\n\n        <div className={styles.tools}>\n          <div className={styles.time}>{getTime(data.date)}</div>\n          <div\n            aria-label=\"removeBtn\"\n            className={styles.edit_button}\n            onClick={removeLink}\n          >\n            移除\n          </div>\n          <div\n            aria-label=\"editBtn\"\n            className={styles.edit_button}\n            onClick={handleEditTitle}\n          >\n            編輯\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//////Comments//////\n\nconst Comments = ({ cardId, projectId }) => {\n  const userId = useSelector((state) => state.user.id)\n  const [comments, setComments] = useState([])\n\n  //get data from cloud\n  useEffect(() => {\n    let unsubscribe = listenToComments(\n      cardId,\n      handleAdd,\n      handleModify,\n      handleRemove\n    )\n\n    return unsubscribe\n  }, [])\n\n  const handleAdd = (res, source) => {\n    //prevent repeatly adding when itinitallizing\n    if (comments.findIndex((comment) => comment.id === res.id) < 0) {\n      setComments((prev) => [...prev, res])\n    }\n  }\n\n  const handleModify = (res) => {\n    setComments((prev) =>\n      prev.map((comment) => {\n        return comment.id === res.id ? res : comment\n      })\n    )\n  }\n\n  const handleRemove = (res, source) => {\n    setComments((prev) => prev.filter((comment) => comment.id !== res.id))\n  }\n\n  return (\n    <div className={styles.comments_section}>\n      <div className={styles.controll_bar}>\n        <div className={styles.title}>留言</div>\n      </div>\n      <div className={styles.container}>\n        {/* comment */}\n        <AddComment cardId={cardId} userId={userId} />\n        {comments.map((comment) => {\n          return <Comment key={nanoid()} comment={comment} userId={userId} />\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst AddComment = ({ cardId, userId }) => {\n  // const [isEditing, setEditing] = useState(false)\n  const [pending, setPending] = useState(\"\")\n\n  const addComment = (e) => {\n    if (e.key === \"Enter\" && pending !== \"\") {\n      let input = {\n        card_id: cardId,\n        sender_id: userId,\n        content: pending,\n        date: new Date(),\n      }\n      //update cloud data\n      addComment_Fs(input)\n      setPending(\"\")\n    }\n  }\n\n  const getColor = () => {\n    let code = Math.floor(userId.charCodeAt(0) * 4.86 - 233.28)\n    let colorCode = `hsl(${code},95%, 75%)`\n    return colorCode\n  }\n\n  return (\n    <div className={styles.comment}>\n      <div className={styles.user} style={{ backgroundColor: getColor() }}>\n        煞\n      </div>\n      <div className={styles.details}>\n        <input\n          className={styles.message}\n          value={pending}\n          onChange={(e) => setPending(e.target.value)}\n          placeholder=\"撰寫留言\"\n          onKeyPress={addComment}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst Comment = ({ comment, userId }) => {\n  const isMyComment = userId === comment.sender_id\n\n  //edit comment\n  const [isEditing, setEditing] = useState(false)\n  const [pending, setPending] = useState(comment.content)\n  const handleEditComment = (e) => {\n    if ((e.target.ariaLabel = \"editBtn\")) {\n      if (isEditing) {\n        updateComment(pending)\n        setEditing(!isEditing)\n      } else {\n        setEditing(!isEditing)\n      }\n    }\n  }\n\n  const updateComment = (input) => {\n    let change = {\n      content: input,\n    }\n    updateComment_Fs(comment.id, change)\n  }\n\n  const removeComment = (e) => {\n    if ((e.target.ariaLabel = \"removeBtn\")) {\n      let yes = window.confirm(\"你確定要刪除這則留言嗎？\")\n\n      if (yes) {\n        removeComment_Fs(comment.id)\n      }\n    }\n  }\n\n  const sender = useSelector((state) =>\n    state.members.find((member) => member.id === comment.sender_id)\n  )\n\n  return (\n    <div className={styles.comment}>\n      <div\n        className={styles.user}\n        style={{ backgroundColor: getColor(sender.id) }}\n      >\n        {sender.name.slice(0, 1)}\n      </div>\n      <div className={styles.details}>\n        <div className={styles.info}>\n          <div className={styles.name}>{sender.name}</div>\n          {/* <time>{comment.time}</time> */}\n          <div className={styles.time}>{getTime(comment.date)}</div>\n        </div>\n\n        {isEditing ? (\n          <textarea\n            className={styles.message}\n            value={pending}\n            onChange={(e) => setPending(e.target.value)}\n            autoFocus\n          />\n        ) : (\n          <pre className={styles.message}>{comment.content} </pre>\n        )}\n\n        {isMyComment ? (\n          <div className={styles.tools}>\n            <div\n              aria-label=\"editBtn\"\n              className={styles.edit_button}\n              onClick={handleEditComment}\n            >\n              編輯\n            </div>\n            <div\n              aria-label=\"removeBtn\"\n              className={styles.edit_button}\n              onClick={removeComment}\n            >\n              刪除\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n","/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/membersSlice.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/lib.js",[],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/User/User.jsx",["240","241","242","243","244","245","246"],"/Users/galele/unSycFile/appworksSchool/personalProject/PPlanner/my-app/src/pages/Project/feature/CardBoard/component/Tags.jsx",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { useState, useRef, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\"\n\nimport styles from \"./largeCard.module.scss\"\n\nimport {\n  updateCard_Fs,\n  listenToComments,\n  listenToLinks,\n  addComment_Fs,\n  updateComment_Fs,\n  removeComment_Fs,\n  addLink_Fs,\n  updateLink_Fs,\n  removeLink_Fs,\n  updateProject_Fs,\n} from \"../../../../../firebase/Config\"\nimport { nanoid } from \"@reduxjs/toolkit\"\n\n//DatesPicker\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nimport {\n  getTime,\n  getColor,\n  resetTime,\n  colorCode,\n  colorCode_tags,\n} from \"../../../../lib\"\n\nconst Tags = ({ projectId, card, isfloating, setFloat }) => {\n  const project = useSelector((state) =>\n    state.projects.find((project) => project.id === projectId)\n  )\n\n  const toggleAddTag = (e) => {\n    let float = {\n      type: \"addTag\",\n      position: e.target.getBoundingClientRect(),\n    }\n\n    setFloat(float)\n  }\n  try {\n    return (\n      <div className={styles.tags_section}>\n        <div className={styles.title}>標籤</div>\n        <div className={styles.container}>\n          {/* category tag */}\n          <div\n            aria-label=\"addTag\" //need to be able to change category\n            className={styles.tag}\n            style={{ backgroundColor: colorCode[card.category] }}\n            onClick={toggleAddTag}\n          >\n            {card.category}\n          </div>\n\n          {/* regular tags */}\n          {card.tags.map((tag) => {\n            let target = project.tags.find((item) => item.id === tag)\n\n            return (\n              <div\n                aria-label=\"addTag\"\n                key={nanoid()}\n                className={styles.tag}\n                style={{\n                  backgroundColor: colorCode[target.color],\n                }}\n                onClick={toggleAddTag}\n              >\n                {target.name}\n              </div>\n            )\n          })}\n          <div\n            aria-label=\"addTag\"\n            className={styles.tag}\n            onClick={toggleAddTag}\n          >\n            +\n          </div>\n        </div>\n      </div>\n    )\n  } catch (err) {\n    console.log(err.message)\n    return null\n  }\n}\n\nexport default Tags\n\nexport const AddTag = ({ card, isfloating, setFloat }) => {\n  const { projectId, cardId } = useParams()\n\n  const tags = useSelector(\n    (state) => state.projects.find((project) => project.id === projectId).tags\n  )\n\n  const toggleTag = (e) => {\n    let index = card.tags.findIndex((tag) => tag === e.target.dataset.tagid)\n    let newTags\n    if (index > -1) {\n      //delete if tag exists\n      newTags = Array.from(card.tags)\n      newTags.splice(index, 1)\n\n      let change = {\n        tags: newTags,\n      }\n      updateCard_Fs(projectId, cardId, change)\n    } else {\n      //add if not exists\n      newTags = Array.from(card.tags)\n      newTags.push(e.target.dataset.tagid)\n\n      let change = {\n        tags: newTags,\n      }\n      updateCard_Fs(projectId, cardId, change)\n    }\n  }\n\n  const [isEditing, setEditing] = useState(false)\n  const [onChangeTagId, setChangingTag] = useState(null)\n  const [pending, setPending] = useState(\"\")\n\n  const handleEditTag = (tagId, tagName) => {\n    if (isEditing) {\n      setPending(tagName)\n      setChangingTag(tagId)\n    } else {\n      setPending(tagName)\n      setChangingTag(tagId)\n      setEditing(true)\n    }\n  }\n\n  const saveEditTag = () => {\n    if (\n      isEditing &&\n      tags.find((tag) => tag.id === onChangeTagId).name !== pending\n    ) {\n      let newTags = []\n      tags.forEach((tag) => {\n        let temp = {}\n        for (let key in tag) {\n          temp[key] = tag[key]\n        }\n        newTags.push(temp)\n      })\n      newTags.find((tag) => tag.id === onChangeTagId).name = pending\n\n      let change = {\n        tags: newTags,\n      }\n\n      updateProject_Fs(projectId, change)\n      setPending(\"\")\n      setChangingTag(null)\n      setEditing(false)\n    }\n  }\n\n  try {\n    return (\n      <div\n        style={{\n          top: `${isfloating.position.y + 32}px`,\n          left: `${isfloating.position.x}px`,\n        }}\n        className={styles.addTag_container}\n        aria-label=\"addTag\"\n      >\n        {!isEditing ? (\n          <span aria-label=\"addTag\" className={styles.addTag_span}>\n            標籤\n          </span>\n        ) : (\n          <input\n            aria-label=\"addTag\"\n            type=\"text\"\n            value={pending}\n            onChange={(e) => {\n              setPending(e.target.value)\n            }}\n            placeholder=\"請輸入標籤標題...\"\n            className={styles.input}\n            autoFocus\n          />\n        )}\n\n        {tags.map((tag, index) => {\n          return (\n            <div className={styles.tag_container}>\n              <div\n                aria-label=\"addTag\"\n                data-tagId={tag.id}\n                className={\n                  ` ${styles.tag}` +\n                  `  ${card.tags.includes(tag.id) && styles.active}` +\n                  `  ${onChangeTagId === tag.id && styles.editing}`\n                }\n                style={{ backgroundColor: colorCode[tag.color] }}\n                onClick={toggleTag}\n              >\n                {tag.name}\n              </div>\n              <div\n                aria-label=\"addTag\"\n                data-tagId={tag.id}\n                className={\n                  onChangeTagId === tag.id ? styles.onEdit : styles.edit\n                }\n                onClick={() => {\n                  handleEditTag(tag.id, tag.name)\n                }}\n              ></div>\n            </div>\n          )\n        })}\n        <div\n          aria-label=\"addTag\"\n          className={styles.addTag_button}\n          onClick={() => {\n            saveEditTag()\n          }}\n        >\n          新增\n        </div>\n      </div>\n    )\n  } catch {\n    return null\n  }\n}\n",{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":2,"column":10,"nodeType":"275","messageId":"276","endLine":2,"endColumn":17},{"ruleId":"273","severity":1,"message":"277","line":2,"column":19,"nodeType":"275","messageId":"276","endLine":2,"endColumn":28},{"ruleId":"269","replacedBy":"278"},{"ruleId":"271","replacedBy":"279"},{"ruleId":"273","severity":1,"message":"280","line":2,"column":27,"nodeType":"275","messageId":"276","endLine":2,"endColumn":36},{"ruleId":"273","severity":1,"message":"281","line":5,"column":20,"nodeType":"275","messageId":"276","endLine":5,"endColumn":26},{"ruleId":"273","severity":1,"message":"282","line":6,"column":3,"nodeType":"275","messageId":"276","endLine":6,"endColumn":9},{"ruleId":"273","severity":1,"message":"283","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":8},{"ruleId":"273","severity":1,"message":"284","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":16},{"ruleId":"273","severity":1,"message":"286","line":21,"column":10,"nodeType":"275","messageId":"276","endLine":21,"endColumn":19},{"ruleId":"273","severity":1,"message":"287","line":26,"column":9,"nodeType":"275","messageId":"276","endLine":26,"endColumn":20},{"ruleId":"273","severity":1,"message":"288","line":30,"column":9,"nodeType":"275","messageId":"276","endLine":30,"endColumn":18},{"ruleId":"273","severity":1,"message":"289","line":34,"column":10,"nodeType":"275","messageId":"276","endLine":34,"endColumn":22},{"ruleId":"269","replacedBy":"290"},{"ruleId":"271","replacedBy":"291"},{"ruleId":"273","severity":1,"message":"292","line":18,"column":9,"nodeType":"275","messageId":"276","endLine":18,"endColumn":22},{"ruleId":"269","replacedBy":"293"},{"ruleId":"271","replacedBy":"294"},{"ruleId":"273","severity":1,"message":"295","line":2,"column":17,"nodeType":"275","messageId":"276","endLine":2,"endColumn":25},{"ruleId":"273","severity":1,"message":"284","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":16},{"ruleId":"273","severity":1,"message":"296","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":12},{"ruleId":"273","severity":1,"message":"283","line":11,"column":3,"nodeType":"275","messageId":"276","endLine":11,"endColumn":8},{"ruleId":"273","severity":1,"message":"282","line":12,"column":3,"nodeType":"275","messageId":"276","endLine":12,"endColumn":9},{"ruleId":"273","severity":1,"message":"297","line":13,"column":3,"nodeType":"275","messageId":"276","endLine":13,"endColumn":13},{"ruleId":"273","severity":1,"message":"298","line":19,"column":8,"nodeType":"275","messageId":"276","endLine":19,"endColumn":13},{"ruleId":"273","severity":1,"message":"299","line":21,"column":10,"nodeType":"275","messageId":"276","endLine":21,"endColumn":23},{"ruleId":"273","severity":1,"message":"300","line":56,"column":9,"nodeType":"275","messageId":"276","endLine":56,"endColumn":21},{"ruleId":"273","severity":1,"message":"301","line":60,"column":11,"nodeType":"275","messageId":"276","endLine":60,"endColumn":20},{"ruleId":"273","severity":1,"message":"301","line":76,"column":11,"nodeType":"275","messageId":"276","endLine":76,"endColumn":20},{"ruleId":"273","severity":1,"message":"302","line":104,"column":11,"nodeType":"275","messageId":"276","endLine":104,"endColumn":17},{"ruleId":"273","severity":1,"message":"302","line":585,"column":11,"nodeType":"275","messageId":"276","endLine":585,"endColumn":17},{"ruleId":"269","replacedBy":"303"},{"ruleId":"271","replacedBy":"304"},{"ruleId":"273","severity":1,"message":"305","line":11,"column":23,"nodeType":"275","messageId":"276","endLine":11,"endColumn":34},{"ruleId":"273","severity":1,"message":"306","line":25,"column":10,"nodeType":"275","messageId":"276","endLine":25,"endColumn":25},{"ruleId":"273","severity":1,"message":"307","line":31,"column":7,"nodeType":"275","messageId":"276","endLine":31,"endColumn":12},{"ruleId":"273","severity":1,"message":"308","line":32,"column":9,"nodeType":"275","messageId":"276","endLine":32,"endColumn":16},{"ruleId":"273","severity":1,"message":"309","line":165,"column":7,"nodeType":"275","messageId":"276","endLine":165,"endColumn":15},{"ruleId":"273","severity":1,"message":"310","line":166,"column":9,"nodeType":"275","messageId":"276","endLine":166,"endColumn":18},{"ruleId":"273","severity":1,"message":"309","line":213,"column":7,"nodeType":"275","messageId":"276","endLine":213,"endColumn":15},{"ruleId":"273","severity":1,"message":"310","line":214,"column":9,"nodeType":"275","messageId":"276","endLine":214,"endColumn":18},{"ruleId":"311","severity":1,"message":"312","line":218,"column":9,"nodeType":"313","endLine":218,"endColumn":43},{"ruleId":"314","severity":1,"message":"315","line":275,"column":34,"nodeType":"316","messageId":"317","endLine":275,"endColumn":35},{"ruleId":"311","severity":1,"message":"318","line":358,"column":6,"nodeType":"319","endLine":358,"endColumn":17,"suggestions":"320"},{"ruleId":"273","severity":1,"message":"321","line":424,"column":7,"nodeType":"275","messageId":"276","endLine":424,"endColumn":17},{"ruleId":"273","severity":1,"message":"284","line":6,"column":3,"nodeType":"275","messageId":"276","endLine":6,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":16},{"ruleId":"273","severity":1,"message":"296","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":12},{"ruleId":"273","severity":1,"message":"322","line":14,"column":8,"nodeType":"275","messageId":"276","endLine":14,"endColumn":12},{"ruleId":"273","severity":1,"message":"295","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"280","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":36},{"ruleId":"269","replacedBy":"323"},{"ruleId":"271","replacedBy":"324"},{"ruleId":"273","severity":1,"message":"325","line":1,"column":38,"nodeType":"275","messageId":"276","endLine":1,"endColumn":44},{"ruleId":"273","severity":1,"message":"281","line":3,"column":20,"nodeType":"275","messageId":"276","endLine":3,"endColumn":26},{"ruleId":"273","severity":1,"message":"284","line":6,"column":3,"nodeType":"275","messageId":"276","endLine":6,"endColumn":7},{"ruleId":"273","severity":1,"message":"296","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":12},{"ruleId":"273","severity":1,"message":"326","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":14},{"ruleId":"311","severity":1,"message":"327","line":54,"column":6,"nodeType":"319","endLine":54,"endColumn":8,"suggestions":"328"},{"ruleId":"273","severity":1,"message":"329","line":157,"column":10,"nodeType":"275","messageId":"276","endLine":157,"endColumn":23},{"ruleId":"273","severity":1,"message":"330","line":157,"column":25,"nodeType":"275","messageId":"276","endLine":157,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":2,"column":10,"nodeType":"275","messageId":"276","endLine":2,"endColumn":17},{"ruleId":"273","severity":1,"message":"277","line":2,"column":19,"nodeType":"275","messageId":"276","endLine":2,"endColumn":28},{"ruleId":"273","severity":1,"message":"295","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"281","line":3,"column":20,"nodeType":"275","messageId":"276","endLine":3,"endColumn":26},{"ruleId":"273","severity":1,"message":"331","line":11,"column":10,"nodeType":"275","messageId":"276","endLine":11,"endColumn":16},{"ruleId":"273","severity":1,"message":"332","line":25,"column":3,"nodeType":"275","messageId":"276","endLine":25,"endColumn":19},{"ruleId":"273","severity":1,"message":"333","line":40,"column":3,"nodeType":"275","messageId":"276","endLine":40,"endColumn":12},{"ruleId":"273","severity":1,"message":"334","line":51,"column":7,"nodeType":"275","messageId":"276","endLine":51,"endColumn":15},{"ruleId":"273","severity":1,"message":"335","line":53,"column":9,"nodeType":"275","messageId":"276","endLine":53,"endColumn":14},{"ruleId":"273","severity":1,"message":"336","line":56,"column":9,"nodeType":"275","messageId":"276","endLine":56,"endColumn":25},{"ruleId":"273","severity":1,"message":"337","line":60,"column":9,"nodeType":"275","messageId":"276","endLine":60,"endColumn":28},{"ruleId":"273","severity":1,"message":"338","line":64,"column":9,"nodeType":"275","messageId":"276","endLine":64,"endColumn":28},{"ruleId":"273","severity":1,"message":"339","line":72,"column":9,"nodeType":"275","messageId":"276","endLine":72,"endColumn":25},{"ruleId":"311","severity":1,"message":"340","line":144,"column":6,"nodeType":"319","endLine":144,"endColumn":8,"suggestions":"341"},{"ruleId":"273","severity":1,"message":"295","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"280","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":36},{"ruleId":"273","severity":1,"message":"280","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":36},{"ruleId":"273","severity":1,"message":"297","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":13},{"ruleId":"273","severity":1,"message":"342","line":19,"column":10,"nodeType":"275","messageId":"276","endLine":19,"endColumn":14},{"ruleId":"343","severity":1,"message":"344","line":50,"column":29,"nodeType":"345","messageId":"346","endLine":50,"endColumn":31},{"ruleId":"273","severity":1,"message":"347","line":72,"column":9,"nodeType":"275","messageId":"276","endLine":72,"endColumn":17},{"ruleId":"273","severity":1,"message":"295","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"280","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":36},{"ruleId":"273","severity":1,"message":"284","line":3,"column":3,"nodeType":"275","messageId":"276","endLine":3,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":4,"column":3,"nodeType":"275","messageId":"276","endLine":4,"endColumn":16},{"ruleId":"273","severity":1,"message":"296","line":5,"column":3,"nodeType":"275","messageId":"276","endLine":5,"endColumn":12},{"ruleId":"273","severity":1,"message":"326","line":6,"column":3,"nodeType":"275","messageId":"276","endLine":6,"endColumn":14},{"ruleId":"273","severity":1,"message":"283","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":8},{"ruleId":"273","severity":1,"message":"282","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":9},{"ruleId":"273","severity":1,"message":"348","line":10,"column":10,"nodeType":"275","messageId":"276","endLine":10,"endColumn":21},{"ruleId":"273","severity":1,"message":"349","line":15,"column":10,"nodeType":"275","messageId":"276","endLine":15,"endColumn":26},{"ruleId":"273","severity":1,"message":"347","line":27,"column":7,"nodeType":"275","messageId":"276","endLine":27,"endColumn":15},{"ruleId":"273","severity":1,"message":"280","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":36},{"ruleId":"273","severity":1,"message":"284","line":4,"column":3,"nodeType":"275","messageId":"276","endLine":4,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":5,"column":3,"nodeType":"275","messageId":"276","endLine":5,"endColumn":16},{"ruleId":"273","severity":1,"message":"326","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":14},{"ruleId":"273","severity":1,"message":"283","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":8},{"ruleId":"273","severity":1,"message":"282","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":9},{"ruleId":"273","severity":1,"message":"350","line":34,"column":40,"nodeType":"275","messageId":"276","endLine":34,"endColumn":49},{"ruleId":"273","severity":1,"message":"347","line":42,"column":9,"nodeType":"275","messageId":"276","endLine":42,"endColumn":17},{"ruleId":"311","severity":1,"message":"351","line":116,"column":6,"nodeType":"319","endLine":116,"endColumn":8,"suggestions":"352"},{"ruleId":"311","severity":1,"message":"353","line":262,"column":6,"nodeType":"319","endLine":262,"endColumn":8,"suggestions":"354"},{"ruleId":"311","severity":1,"message":"355","line":772,"column":6,"nodeType":"319","endLine":772,"endColumn":8,"suggestions":"356"},{"ruleId":"273","severity":1,"message":"280","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":36},{"ruleId":"273","severity":1,"message":"284","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":16},{"ruleId":"273","severity":1,"message":"296","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":12},{"ruleId":"273","severity":1,"message":"326","line":10,"column":3,"nodeType":"275","messageId":"276","endLine":10,"endColumn":14},{"ruleId":"273","severity":1,"message":"283","line":11,"column":3,"nodeType":"275","messageId":"276","endLine":11,"endColumn":8},{"ruleId":"273","severity":1,"message":"282","line":12,"column":3,"nodeType":"275","messageId":"276","endLine":12,"endColumn":9},{"ruleId":"273","severity":1,"message":"325","line":1,"column":27,"nodeType":"275","messageId":"276","endLine":1,"endColumn":33},{"ruleId":"273","severity":1,"message":"280","line":1,"column":35,"nodeType":"275","messageId":"276","endLine":1,"endColumn":44},{"ruleId":"273","severity":1,"message":"305","line":2,"column":10,"nodeType":"275","messageId":"276","endLine":2,"endColumn":21},{"ruleId":"273","severity":1,"message":"284","line":4,"column":3,"nodeType":"275","messageId":"276","endLine":4,"endColumn":7},{"ruleId":"273","severity":1,"message":"285","line":5,"column":3,"nodeType":"275","messageId":"276","endLine":5,"endColumn":16},{"ruleId":"273","severity":1,"message":"326","line":7,"column":3,"nodeType":"275","messageId":"276","endLine":7,"endColumn":14},{"ruleId":"273","severity":1,"message":"283","line":8,"column":3,"nodeType":"275","messageId":"276","endLine":8,"endColumn":8},{"ruleId":"273","severity":1,"message":"282","line":9,"column":3,"nodeType":"275","messageId":"276","endLine":9,"endColumn":9},{"ruleId":"273","severity":1,"message":"297","line":10,"column":3,"nodeType":"275","messageId":"276","endLine":10,"endColumn":13},{"ruleId":"273","severity":1,"message":"357","line":17,"column":3,"nodeType":"275","messageId":"276","endLine":17,"endColumn":19},{"ruleId":"273","severity":1,"message":"358","line":18,"column":3,"nodeType":"275","messageId":"276","endLine":18,"endColumn":16},{"ruleId":"273","severity":1,"message":"359","line":19,"column":3,"nodeType":"275","messageId":"276","endLine":19,"endColumn":16},{"ruleId":"273","severity":1,"message":"360","line":20,"column":3,"nodeType":"275","messageId":"276","endLine":20,"endColumn":19},{"ruleId":"273","severity":1,"message":"361","line":21,"column":3,"nodeType":"275","messageId":"276","endLine":21,"endColumn":19},{"ruleId":"273","severity":1,"message":"362","line":22,"column":3,"nodeType":"275","messageId":"276","endLine":22,"endColumn":13},{"ruleId":"273","severity":1,"message":"363","line":23,"column":3,"nodeType":"275","messageId":"276","endLine":23,"endColumn":16},{"ruleId":"273","severity":1,"message":"364","line":24,"column":3,"nodeType":"275","messageId":"276","endLine":24,"endColumn":16},{"ruleId":"273","severity":1,"message":"365","line":30,"column":8,"nodeType":"275","messageId":"276","endLine":30,"endColumn":18},{"ruleId":"273","severity":1,"message":"366","line":34,"column":3,"nodeType":"275","messageId":"276","endLine":34,"endColumn":10},{"ruleId":"273","severity":1,"message":"367","line":35,"column":3,"nodeType":"275","messageId":"276","endLine":35,"endColumn":11},{"ruleId":"273","severity":1,"message":"368","line":36,"column":3,"nodeType":"275","messageId":"276","endLine":36,"endColumn":12},{"ruleId":"273","severity":1,"message":"369","line":38,"column":3,"nodeType":"275","messageId":"276","endLine":38,"endColumn":17},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"no-unused-vars","'getData' is defined but never used.","Identifier","unusedVar","'getFsData' is defined but never used.",["370"],["371"],"'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'OnDragEnd' is defined but never used.","'itineraryId' is assigned a value but never used.","'itinerary' is assigned a value but never used.","'filterMethod' is assigned a value but never used.",["370"],["371"],"'handleAddCard' is assigned a value but never used.",["370"],["371"],"'useState' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'DayJS' is defined but never used.","'addDayplan_Fs' is defined but never used.","'getCardTitle' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'source' is assigned a value but never used.",["370"],["371"],"'useDispatch' is defined but never used.","'checkUserStatus' is defined but never used.","'match' is assigned a value but never used.","'history' is assigned a value but never used.","'location' is assigned a value but never used.","'projectId' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'tags' conditional could make the dependencies of useEffect Hook (at line 252) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'tags' in its own useMemo() Hook.","VariableDeclarator","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'handleDateChange'. Either include it or remove the dependency array.","ArrayExpression",["372"],"'ModeSelect' is assigned a value but never used.","'User' is defined but never used.",["370"],["371"],"'useRef' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'handleAddProject', 'handleModifyProject', 'handleRemoveProject', and 'userId'. Either include them or remove the dependency array.",["373"],"'pendingMember' is assigned a value but never used.","'setPendingMember' is assigned a value but never used.","'nanoid' is defined but never used.","'listenToDayplans' is defined but never used.","'initCards' is defined but never used.","'projects' is assigned a value but never used.","'cards' is assigned a value but never used.","'handleAddDayplan' is assigned a value but never used.","'handleModifyDayplan' is assigned a value but never used.","'handleRemoveDayplan' is assigned a value but never used.","'handleModifyCard' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkModifyCard', 'dispatch', 'handleAddCard', 'handleAddMember', 'handleModifyMember', 'handleRemoveCard', 'handleRemoveMember', and 'projectId'. Either include them or remove the dependency array.",["374"],"'wait' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'dispatch' is assigned a value but never used.","'useSelector' is defined but never used.","'editProjectTitle' is defined but never used.","'colorCode' is defined but never used.","React Hook useEffect has missing dependencies: 'cardId' and 'handleAddLink'. Either include them or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'card.end_time' and 'card.start_time'. Either include them or remove the dependency array. If 'setStartDate' needs the current value of 'card.start_time', you can also switch to useReducer instead of useState and read 'card.start_time' in the reducer.",["376"],"React Hook useEffect has missing dependencies: 'cardId' and 'handleAdd'. Either include them or remove the dependency array.",["377"],"'listenToComments' is defined but never used.","'listenToLinks' is defined but never used.","'addComment_Fs' is defined but never used.","'updateComment_Fs' is defined but never used.","'removeComment_Fs' is defined but never used.","'addLink_Fs' is defined but never used.","'updateLink_Fs' is defined but never used.","'removeLink_Fs' is defined but never used.","'DatePicker' is defined but never used.","'getTime' is defined but never used.","'getColor' is defined but never used.","'resetTime' is defined but never used.","'colorCode_tags' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [handleDateChange, startDate]",{"range":"390","text":"391"},"Update the dependencies array to be: [handleAddProject, handleModifyProject, handleRemoveProject, userId]",{"range":"392","text":"393"},"Update the dependencies array to be: [checkModifyCard, dispatch, handleAddCard, handleAddMember, handleModifyMember, handleRemoveCard, handleRemoveMember, projectId]",{"range":"394","text":"395"},"Update the dependencies array to be: [cardId, handleAddLink]",{"range":"396","text":"397"},"Update the dependencies array to be: [card.end_time, card.start_time]",{"range":"398","text":"399"},"Update the dependencies array to be: [cardId, handleAdd]",{"range":"400","text":"401"},[8903,8914],"[handleDateChange, startDate]",[1274,1276],"[handleAddProject, handleModifyProject, handleRemoveProject, userId]",[3465,3467],"[checkModifyCard, dispatch, handleAddCard, handleAddMember, handleModifyMember, handleRemoveCard, handleRemoveMember, projectId]",[2564,2566],"[cardId, handleAddLink]",[6477,6479],"[card.end_time, card.start_time]",[19091,19093],"[cardId, handleAdd]"]